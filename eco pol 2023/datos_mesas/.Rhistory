tbody <- nodos %>%
html_element("tbody") %>%
html_table()
tbody
td <- tbody %>%
html_element("t\r") %>%
html_element("t\d") %>%
td
library(tidyverse)
library(rvest)
bcra_LELIQ <- read_html("https://www.bcra.gob.ar/PublicacionesEstadisticas/Historial-Leliq.asp")
nodos <- bcra_LELIQ %>% html_elements("table"); nodos
tbody <- nodos %>%
html_element("tbody") %>%
html_table()
tbody
rm(list=ls())
library(tidyverse)
library(rvest)
bcra_LELIQ <- read_html("https://www.bcra.gob.ar/PublicacionesEstadisticas/Historial-Leliq.asp")
nodos <- bcra_LELIQ %>% html_elements("table"); nodos
table <- nodos %>%
html_element("thead") %>%
html_element("tbody") %>%
html_table()
table
table <- nodos %>%
html_element("tbody") %>%
html_table()
table
rm(list=ls())
library(tidyverse)
library(rvest)
bcra_LELIQ <- read_html("https://www.bcra.gob.ar/PublicacionesEstadisticas/Historial-Leliq.asp")
nodos <- bcra_LELIQ %>% html_elements("table"); nodos
tabla <- nodos %>%
html_element("tbody") %>%
html_table()
tabla
rm(list=ls())
library(installr)
library(R.utils)
library(dplyr)
library(data.table)
library(tidyverse)
library(rvest)
library(janitor)
library(rio)
library(here)
library(tmap)
library(sf)
library(glue)
library(scales)
library(htmltools)
library(leaflet)
library(doParallel) # Not to overload
cl <- makeCluster(6)
registerDoParallel(cl)
gc()
directorio <- "C:\\Users\\IDECOR\\Documents\\Code\\Political_Economy\\eco pol 2023\\datos_mesas"
#directorio <- "C:\\Users\\stefa\\Documents\\Code\\Political_Economy\\eco pol 2023\\datos_mesas"
setwd(directorio); getwd()
# # # Geometrías departamentales # # #
dptos <- st_read("~/Code/Political_Economy/eco pol 2023/datos_mesas/Departamentos/departamentos.shp"); names(dptos)
dptos <- dptos[dptos$OBJECTID!="488"&dptos$OBJECTID!="489",] # Elimina Islas Malvinas y Antartida
gc() # Not to overload
plot(dptos)
head(dptos)
rm(cl)
seccion <- import("seccion.csv", setclass = "data.table", encoding = "UTF-8")
deptnames <- import("Departamentos/deptnames.csv", setclass = "data.table", encoding = "UTF-8")
deptGEO <- import("Departamentos/deptnamesGEO.csv", setclass = "data.table", encoding = "UTF-8")
seccion$nombre <- toupper(seccion$nombre)
head(seccion)
head(deptnames)
head(deptGEO)
colnames(deptnames) <- c("DEPARTAMENTO", "NOMBRE"); head(deptnames)
colnames(deptGEO) <- c("index", "NOMBRE"); head(deptGEO)
head(seccion)
head(dptos)
head(dptos)
seccion <- import("seccion.csv", setclass = "data.table", encoding = "UTF-8")
deptnames <- import("Departamentos/deptnames.csv", setclass = "data.table", encoding = "UTF-8")
deptGEO <- import("Departamentos/deptnamesGEO.csv", setclass = "data.table", encoding = "UTF-8")
seccion$nombre <- toupper(seccion$nombre)
head(seccion)
head(deptnames)
head(deptGEO)
colnames(deptnames) <- c("DEPARTAMENTO", "NOMBRE"); head(deptnames)
colnames(deptGEO) <- c("index", "NOMBRE"); head(deptGEO)
head(dptos)
seccion <- import("seccion.csv", setclass = "data.table", encoding = "UTF-8")
deptnames <- import("Departamentos/deptnames.csv", setclass = "data.table", encoding = "UTF-8")
deptGEO <- import("Departamentos/deptnamesGEO.csv", setclass = "data.table", encoding = "UTF-8")
seccion$nombre <- toupper(seccion$nombre)
seccion$nombre <- toupper(seccion$nombre); head(seccion)
colnames(deptnames) <- c("DEPARTAMENTO", "NOMBRE"); head(deptnames)
colnames(deptGEO) <- c("index", "NOMBRE"); head(deptGEO)
table(deptGEO$index)
table(dptos$OBJECTID)
dept <- merge(deptnames, deptGEO, by = "NOMBRE")
head(dept)
head(deptnames)
head(deptGEO)
dept <- merge(deptnames, deptGEO, by = "NOMBRE")
head(dept)
merge <- merge(dptos, deptnames, by.x = "OBJECTID", by.y = "id")
head(merge)
head(dptos)
seccion <- import("seccion.csv", setclass = "data.table", encoding = "UTF-8")
deptnames <- import("Departamentos/deptnames.csv", setclass = "data.table", encoding = "UTF-8")
deptGEO <- import("Departamentos/deptnamesGEO.csv", setclass = "data.table", encoding = "UTF-8")
seccion$nombre <- toupper(seccion$nombre); head(seccion)
colnames(deptnames) <- c("DEPARTAMENTO", "NOMBRE"); head(deptnames)
colnames(deptGEO) <- c("index", "NOMBRE"); head(deptGEO)
dept <- merge(deptnames, deptGEO, by = "NOMBRE")
head(dept)
merge <- merge(dptos, dept, by.x = "OBJECTID", by.y = "id")
head(merge)
deptGEO$NOMBRE <- gsub('"', '', deptGEO$NOMBRE); head(deptGEO)
deptGEO$index <- as.integer(gsub("[^0-9]+", "", deptGEO$NOMBRE)); head(deptGEO)
dept <- merge(deptnames, deptGEO, by = "NOMBRE")
head(dept)
merge <- merge(dptos, dept, by.x = "OBJECTID", by.y = "id")
head(merge)
# # # Geometrías departamentales # # #
dptos <- st_read("~/Code/Political_Economy/eco pol 2023/datos_mesas/Departamentos/departamentos.shp"); names(dptos)
dptos <- dptos[dptos$OBJECTID!="488"&dptos$OBJECTID!="489",] # Elimina Islas Malvinas y Antartida
gc() # Not to overload
head(dptos)
seccion <- import("seccion.csv", setclass = "data.table", encoding = "UTF-8")
deptnames <- import("Departamentos/deptnames.csv", setclass = "data.table", encoding = "UTF-8")
deptGEO <- import("Departamentos/deptnamesGEO.csv", setclass = "data.table", encoding = "UTF-8")
seccion$nombre <- toupper(seccion$nombre); head(seccion)
colnames(deptnames) <- c("DEPARTAMENTO", "NOMBRE"); head(deptnames)
colnames(deptGEO) <- c("index", "NOMBRE"); head(deptGEO)
deptnames$NOMBRE <- gsub('"|\\d+', '', deptnames$NOMBRE); head(deptnames)
seccion <- import("seccion.csv", setclass = "data.table", encoding = "UTF-8")
deptnames <- import("Departamentos/deptnames.csv", setclass = "data.table", encoding = "UTF-8")
deptGEO <- import("Departamentos/deptnamesGEO.csv", setclass = "data.table", encoding = "UTF-8")
seccion$nombre <- toupper(seccion$nombre); head(seccion)
colnames(deptnames) <- c("DEPARTAMENTO", "NOMBRE"); head(deptnames)
colnames(deptGEO) <- c("index", "NOMBRE"); head(deptGEO)
deptnames$NOMBRE <- gsub('"|\\d+|<be>', '', deptnames$NOMBRE); head(deptnames)
dept <- merge(deptnames, deptGEO, by = "NOMBRE"); head(dept)
dptos2 <- merge(dptos, dept, by.x = "OBJECTID", by.y = "index")
dptos2 <- merge(dptos, dept, by.x = "OBJECTID", by.y = "index"); head(dptos2)
seccion <- import("seccion.csv", setclass = "data.table", encoding = "UTF-8")
deptnames <- import("Departamentos/deptnames.csv", setclass = "data.table", encoding = "UTF-8")
deptGEO <- import("Departamentos/deptnamesGEO.csv", setclass = "data.table", encoding = "UTF-8")
seccion$nombre <- toupper(seccion$nombre); head(seccion)
colnames(deptnames) <- c("DEPARTAMENTO", "NOMBRE"); head(deptnames)
colnames(deptGEO) <- c("index", "NOMBRE"); head(deptGEO)
deptnames$NOMBRE <- gsub('"|\\d+|<be>', '', deptnames$NOMBRE)
deptnames$NOMBRE <- trimws(deptnames$NOMBRE) # Remove leading/trailing spaces
head(deptnames)
dept <- merge(deptnames, deptGEO, by = "NOMBRE"); head(dept)
dptos2 <- merge(dptos, dept, by.x = "OBJECTID", by.y = "index"); head(dptos2)
rm(dptos2)
View(deptnames)
head(seccion)
seccion2 <- merge(seccion, dept, by.x = "seccion_id", by.y = "index"); head(dptos2)
head(seccion2)
em(seccion2)
rm(seccion2)
rm(list=ls())
# # # Geometrías departamentales # # #
dptos <- st_read("~/Code/Political_Economy/eco pol 2023/datos_mesas/Departamentos/departamentos.shp"); names(dptos)
dptos <- dptos[dptos$OBJECTID!="488"&dptos$OBJECTID!="489",] # Elimina Islas Malvinas y Antartida
gc() # Not to overload
head(dptos)
seccion <- import("seccion.csv", setclass = "data.table", encoding = "UTF-8")
deptnames <- import("Departamentos/deptnames.csv", setclass = "data.table", encoding = "UTF-8")
deptGEO <- import("Departamentos/deptnamesGEO.csv", setclass = "data.table", encoding = "UTF-8")
seccion$nombre <- toupper(seccion$nombre); head(seccion)
colnames(deptnames) <- c("DEPARTAMENTO", "NOMBRE"); head(deptnames)
colnames(deptGEO) <- c("index", "NOMBRE"); head(deptGEO)
deptnames$NOMBRE <- gsub('"|\\d+|<be>', '', deptnames$NOMBRE); head(deptnames)
deptnames$NOMBRE <- trimws(deptnames$NOMBRE) # Remove leading/trailing spaces
head(deptnames)
head(seccion)
head(dptos$DEPARTA)
View(dptos)
View(seccion)
View(deptnames)
rm(list=ls())
# # # Geometrías departamentales # # #
dptos <- st_read("~/Code/Political_Economy/eco pol 2023/datos_mesas/Departamentos/departamentos.shp"); names(dptos)
dptos <- dptos[dptos$OBJECTID!="488"&dptos$OBJECTID!="489",] # Elimina Islas Malvinas y Antartida
gc() # Not to overload
plot(dptos)
head(dptos)
distrito <- import("distrito.csv", setclass = "data.table", encoding = "UTF-8")
seccion <- import("seccion.csv", setclass = "data.table", encoding = "UTF-8")
deptnames <- import("Departamentos/deptnames.csv", setclass = "data.table", encoding = "UTF-8")
deptGEO <- import("Departamentos/deptnamesGEO.csv", setclass = "data.table", encoding = "UTF-8")
head(distrito)
seccion$nombre <- toupper(seccion$nombre); head(seccion)
colnames(deptnames) <- c("DEPARTAMENTO", "NOMBRE"); head(deptnames)
colnames(deptGEO) <- c("index", "NOMBRE"); head(deptGEO)
head(dptos)
head(distrito)
rm(list=ls())
# # # Geometrías departamentales # # #
dptos <- st_read("~/Code/Political_Economy/eco pol 2023/datos_mesas/Departamentos/departamentos.shp"); names(dptos)
dptos <- dptos[dptos$OBJECTID!="488"&dptos$OBJECTID!="489",] # Elimina Islas Malvinas y Antartida
gc() # Not to overload
head(dptos)
distrito <- import("distrito.csv", setclass = "data.table", encoding = "UTF-8")
seccion <- import("seccion.csv", setclass = "data.table", encoding = "UTF-8")
deptnames <- import("Departamentos/deptnames.csv", setclass = "data.table", encoding = "UTF-8")
deptGEO <- import("Departamentos/deptnamesGEO.csv", setclass = "data.table", encoding = "UTF-8")
seccion$nombre <- toupper(seccion$nombre); head(seccion)
distrito$nombre <- toupper(distrito$nombre); head(distrito)
colnames(deptnames) <- c("DEPARTAMENTO", "NOMBRE"); head(deptnames)
colnames(deptGEO) <- c("index", "NOMBRE"); head(deptGEO)
distrito <- rename(distrito, PROVINCIA = nombre); head(distrito)
head(seccion)
seccionxdistrito <- merge(seccion, distrito, by = "distrito_id"); head(seccionxdistrito)
seccionxdistrito <- seccionxdistrito[, -c(3)]; head(seccionxdistrito)
rm(seccion, distrito)
head(dptos)
rm(list=ls())
# # # Geometrías departamentales # # #
dptos <- st_read("~/Code/Political_Economy/eco pol 2023/datos_mesas/Departamentos/departamentos.shp"); names(dptos)
dptos <- dptos[dptos$OBJECTID!="488"&dptos$OBJECTID!="489",] # Elimina Islas Malvinas y Antartida
gc() # Not to overload
head(dptos)
{
distrito <- import("distrito.csv", setclass = "data.table", encoding = "UTF-8")
seccion <- import("seccion.csv", setclass = "data.table", encoding = "UTF-8")
deptnames <- import("Departamentos/deptnames.csv", setclass = "data.table", encoding = "UTF-8")
deptGEO <- import("Departamentos/deptnamesGEO.csv", setclass = "data.table", encoding = "UTF-8")
}
seccion$nombre <- toupper(seccion$nombre)
seccion <- rename(seccion, DEPARTA = nombre); head(seccion)
distrito$nombre <- toupper(distrito$nombre)
distrito <- rename(distrito, PROVINCIA = nombre); head(distrito)
seccionxdistrito <- merge(seccion, distrito, by = "distrito_id"); head(seccionxdistrito)
seccionxdistrito <- seccionxdistrito[, -c(3)]; head(seccionxdistrito); rm(seccion, distrito)
head(dptos)
head(deptnames)
head(deptGEO)
View(seccionxdistrito)
View(dptos)
View(deptnames)
View(deptGEO)
colnames(deptnames) <- c("DEPARTAMENTO", "NOMBRE"); head(deptnames)
colnames(deptGEO) <- c("index", "NOMBRE"); head(deptGEO)
deptnames$NOMBRE <- gsub('"|\\d+|<be>', '', deptnames$NOMBRE); head(deptnames)
deptnames$NOMBRE <- trimws(deptnames$NOMBRE) # Remove leading/trailing spaces
dept <- merge(deptnames, deptGEO, by = "NOMBRE"); head(dept)
head(seccionxdistrito)
head(dptos)
View(dept)
is.na(dept)
na <- is.na(dept); sum(na)
na <- is.na(seccionxdistrito); sum(na)
na <- is.na(dept); sum(na)
rm(na)
head(dptos)
head(seccionxdistrito)
head(dept)
View(dept)
rm(list=ls())
# # # Geometrías departamentales # # #
dptos <- st_read("~/Code/Political_Economy/eco pol 2023/datos_mesas/Departamentos/departamentos.shp"); names(dptos)
dptos <- dptos[dptos$OBJECTID!="488"&dptos$OBJECTID!="489",] # Elimina Islas Malvinas y Antartida
gc() # Not to overload
head(dptos)
{
distrito <- import("distrito.csv", setclass = "data.table", encoding = "UTF-8")
seccion <- import("seccion.csv", setclass = "data.table", encoding = "UTF-8")
deptnames <- import("Departamentos/deptnames.csv", setclass = "data.table", encoding = "UTF-8")
deptGEO <- import("Departamentos/deptnamesGEO.csv", setclass = "data.table", encoding = "UTF-8")
}
seccion$nombre <- toupper(seccion$nombre)
seccion <- rename(seccion, DEPARTA = nombre); head(seccion)
distrito$nombre <- toupper(distrito$nombre)
distrito <- rename(distrito, PROVINCIA = nombre); head(distrito)
seccionxdistrito <- merge(seccion, distrito, by = "distrito_id")
seccionxdistrito <- seccionxdistrito[, -c(3)]; head(seccionxdistrito); rm(seccion, distrito)
colnames(deptnames) <- c("DEPARTAMENTO", "NOMBRE"); head(deptnames)
colnames(deptGEO) <- c("index", "NOMBRE"); head(deptGEO)
nrow(deptnames), nrow(deptGEO)
nrow(deptnames); nrow(deptGEO)
rm(list=ls())
# # # Geometrías departamentales # # #
dptos <- st_read("~/Code/Political_Economy/eco pol 2023/datos_mesas/Departamentos/departamentos.shp"); names(dptos)
dptos <- dptos[dptos$OBJECTID!="488"&dptos$OBJECTID!="489",] # Elimina Islas Malvinas y Antartida
gc() # Not to overload
plot(dptos)
head(dptos)
{
distrito <- import("distrito.csv", setclass = "data.table", encoding = "UTF-8")
seccion <- import("seccion.csv", setclass = "data.table", encoding = "UTF-8")
deptnames <- import("Departamentos/deptnames.csv", setclass = "data.table", encoding = "UTF-8")
deptGEO <- import("Departamentos/deptnamesGEO.csv", setclass = "data.table", encoding = "UTF-8")
}
seccion$nombre <- toupper(seccion$nombre)
seccion <- rename(seccion, DEPARTA = nombre); head(seccion)
distrito$nombre <- toupper(distrito$nombre)
distrito <- rename(distrito, PROVINCIA = nombre); head(distrito)
seccionxdistrito <- merge(seccion, distrito, by = "distrito_id")
seccionxdistrito <- seccionxdistrito[, -c(3)]; head(seccionxdistrito); rm(seccion, distrito)
colnames(deptnames) <- c("DEPARTAMENTO", "NOMBRE"); head(deptnames)
colnames(deptGEO) <- c("index", "NOMBRE"); head(deptGEO)
nrow(deptnames); nrow(deptGEO)
deptnames$NOMBRE <- gsub('"|\\d+|<be>', '', deptnames$NOMBRE); head(deptnames)
deptnames$NOMBRE <- trimws(deptnames$NOMBRE) # Remove leading/trailing spaces
dept <- merge(deptnames, deptGEO, by = "NOMBRE")
# check
nrow(dept)
na <- is.na(dept); sum(na)
rm(na)
install.packages("fuzzyjoin")
install.packages("stringdist")
fuzzy_result <- stringdist_left_join(deptnames, deptGEO, by = c("NOMBRE" = "NOMBRE"), method = "jw", max_dist = 0.1)
library(fuzzyjoin)
library(stringdist)
fuzzy_result <- stringdist_left_join(deptnames, deptGEO, by = c("NOMBRE" = "NOMBRE"), method = "jw", max_dist = 0.1)
head(fuzzy_result)
fuzzy_result
rm(deptGEO, deptnames)
na <- is.na(fuzzy_result$index); sum(na)
na <- is.na(fuzzy_result$NOMBRE.y); sum(na)
rm(na)
rm(list=ls())
# # # Geometrías departamentales # # #
dptos <- st_read("~/Code/Political_Economy/eco pol 2023/datos_mesas/Departamentos/departamentos.shp"); names(dptos)
dptos <- dptos[dptos$OBJECTID!="488"&dptos$OBJECTID!="489",] # Elimina Islas Malvinas y Antartida
gc() # Not to overload
head(dptos)
{
distrito <- import("distrito.csv", setclass = "data.table", encoding = "UTF-8")
seccion <- import("seccion.csv", setclass = "data.table", encoding = "UTF-8")
deptnames <- import("Departamentos/deptnames.csv", setclass = "data.table", encoding = "UTF-8")
deptGEO <- import("Departamentos/deptnamesGEO.csv", setclass = "data.table", encoding = "UTF-8")
}
seccion$nombre <- toupper(seccion$nombre)
seccion <- rename(seccion, DEPARTA = nombre); head(seccion)
distrito$nombre <- toupper(distrito$nombre)
distrito <- rename(distrito, PROVINCIA = nombre); head(distrito)
seccionxdistrito <- merge(seccion, distrito, by = "distrito_id")
seccionxdistrito <- seccionxdistrito[, -c(3)]; head(seccionxdistrito); rm(seccion, distrito)
colnames(deptnames) <- c("DEPARTAMENTO", "NOMBRE"); head(deptnames)
colnames(deptGEO) <- c("index", "NOMBRE"); head(deptGEO)
nrow(deptnames); nrow(deptGEO)
View(deptGEO)
deptnames$NOMBRE <- gsub('"|\\d+|<be>', '', deptnames$NOMBRE); head(deptnames)
deptnames$NOMBRE <- trimws(deptnames$NOMBRE) # Remove leading/trailing spaces
dept <- merge(deptnames, deptGEO, by = "NOMBRE")
rm(deptGEO, deptnames); nrow(dept)
# check missing
na <- is.na(dept); sum(na)
rm(na)
library(fuzzyjoin)
library(stringdist)
fuzzy_result <- stringdist_left_join(deptnames, deptGEO, by = c("NOMBRE" = "NOMBRE"), method = "jw", max_dist = 0.1)
head(fuzzy_result)
na <- is.na(fuzzy_result$index); sum(na)
rm(list=ls())
# # # Geometrías departamentales # # #
dptos <- st_read("~/Code/Political_Economy/eco pol 2023/datos_mesas/Departamentos/departamentos.shp"); names(dptos)
dptos <- dptos[dptos$OBJECTID!="488"&dptos$OBJECTID!="489",] # Elimina Islas Malvinas y Antartida
gc() # Not to overload
head(dptos)
{
distrito <- import("distrito.csv", setclass = "data.table", encoding = "UTF-8")
seccion <- import("seccion.csv", setclass = "data.table", encoding = "UTF-8")
deptnames <- import("Departamentos/deptnames.csv", setclass = "data.table", encoding = "UTF-8")
deptGEO <- import("Departamentos/deptnamesGEO.csv", setclass = "data.table", encoding = "UTF-8")
}
seccion$nombre <- toupper(seccion$nombre)
seccion <- rename(seccion, DEPARTA = nombre); head(seccion)
distrito$nombre <- toupper(distrito$nombre)
distrito <- rename(distrito, PROVINCIA = nombre); head(distrito)
seccionxdistrito <- merge(seccion, distrito, by = "distrito_id")
seccionxdistrito <- seccionxdistrito[, -c(3)]; head(seccionxdistrito); rm(seccion, distrito)
colnames(deptnames) <- c("DEPARTAMENTO", "NOMBRE"); head(deptnames)
colnames(deptGEO) <- c("index", "NOMBRE"); head(deptGEO)
nrow(deptnames); nrow(deptGEO)
deptnames$NOMBRE <- gsub('"|\\d+|<be>', '', deptnames$NOMBRE); head(deptnames)
deptnames$NOMBRE <- trimws(deptnames$NOMBRE) # Remove leading/trailing spaces
dept <- merge(deptnames, deptGEO, by = "NOMBRE")
rm(deptGEO, deptnames); nrow(dept)
# check missing
na <- is.na(dept); sum(na)
rm(na)
library(fuzzyjoin)
library(stringdist)
fuzzy_result <- stringdist_left_join(deptnames, deptGEO, by = c("NOMBRE" = "NOMBRE"), method = "jw", max_dist = 0.1)
rm(list=ls())
# # # Geometrías departamentales # # #
dptos <- st_read("~/Code/Political_Economy/eco pol 2023/datos_mesas/Departamentos/departamentos.shp"); names(dptos)
dptos <- dptos[dptos$OBJECTID!="488"&dptos$OBJECTID!="489",] # Elimina Islas Malvinas y Antartida
gc() # Not to overload
head(dptos)
{
distrito <- import("distrito.csv", setclass = "data.table", encoding = "UTF-8")
seccion <- import("seccion.csv", setclass = "data.table", encoding = "UTF-8")
deptnames <- import("Departamentos/deptnames.csv", setclass = "data.table", encoding = "UTF-8")
deptGEO <- import("Departamentos/deptnamesGEO.csv", setclass = "data.table", encoding = "UTF-8")
}
seccion$nombre <- toupper(seccion$nombre)
seccion <- rename(seccion, DEPARTA = nombre); head(seccion)
distrito$nombre <- toupper(distrito$nombre)
distrito <- rename(distrito, PROVINCIA = nombre); head(distrito)
seccionxdistrito <- merge(seccion, distrito, by = "distrito_id")
seccionxdistrito <- seccionxdistrito[, -c(3)]; head(seccionxdistrito); rm(seccion, distrito)
colnames(deptnames) <- c("DEPARTAMENTO", "NOMBRE"); head(deptnames)
colnames(deptGEO) <- c("index", "NOMBRE"); head(deptGEO)
nrow(deptnames); nrow(deptGEO)
deptnames$NOMBRE <- gsub('"|\\d+|<be>', '', deptnames$NOMBRE); head(deptnames)
deptnames$NOMBRE <- trimws(deptnames$NOMBRE) # Remove leading/trailing spaces
dept <- merge(deptnames, deptGEO, by = "NOMBRE")
nrow(dept)
# check missing
na <- is.na(dept); sum(na)
rm(na)
library(fuzzyjoin)
library(stringdist)
fuzzy_result <- stringdist_left_join(deptnames, deptGEO, by = c("NOMBRE" = "NOMBRE"), method = "jw", max_dist = 0.1)
head(fuzzy_result)
na <- is.na(fuzzy_result$index); sum(na)
na <- is.na(fuzzy_result$NOMBRE.y); sum(na)
head(deptGEO)
rm(list=ls())
# # # Geometrías departamentales # # #
dptos <- st_read("~/Code/Political_Economy/eco pol 2023/datos_mesas/Departamentos/departamentos.shp"); names(dptos)
dptos <- dptos[dptos$OBJECTID!="488"&dptos$OBJECTID!="489",] # Elimina Islas Malvinas y Antartida
gc() # Not to overload
head(dptos)
{
distrito <- import("distrito.csv", setclass = "data.table", encoding = "UTF-8")
seccion <- import("seccion.csv", setclass = "data.table", encoding = "UTF-8")
deptnames <- import("Departamentos/deptnames.csv", setclass = "data.table", encoding = "UTF-8")
deptGEO <- import("Departamentos/deptnamesGEO.csv", setclass = "data.table", encoding = "UTF-8")
}
seccion$nombre <- toupper(seccion$nombre)
seccion <- rename(seccion, DEPARTA = nombre); head(seccion)
distrito$nombre <- toupper(distrito$nombre)
distrito <- rename(distrito, PROVINCIA = nombre); head(distrito)
seccionxdistrito <- merge(seccion, distrito, by = "distrito_id")
seccionxdistrito <- seccionxdistrito[, -c(3)]; head(seccionxdistrito); rm(seccion, distrito)
colnames(deptnames) <- c("DEPARTAMENTO", "NOMBRE"); head(deptnames)
colnames(deptGEO) <- c("index", "NOMBRE"); head(deptGEO)
nrow(deptnames); nrow(deptGEO)
deptnames$NOMBRE <- iconv(deptnames$NOMBRE, "latin1", "UTF-8") # Registra la ñ
deptnames$NOMBRE <- gsub('"|\\d+|<be>', '', deptnames$NOMBRE); head(deptnames)
deptnames$NOMBRE <- trimws(deptnames$NOMBRE) # Remove leading/trailing spaces
dept <- merge(deptnames, deptGEO, by = "NOMBRE")
nrow(dept)
rm(list=ls())
# # # Geometrías departamentales # # #
dptos <- st_read("~/Code/Political_Economy/eco pol 2023/datos_mesas/Departamentos/departamentos.shp"); names(dptos)
dptos <- dptos[dptos$OBJECTID!="488"&dptos$OBJECTID!="489",] # Elimina Islas Malvinas y Antartida
gc() # Not to overload
head(dptos)
{
distrito <- import("distrito.csv", setclass = "data.table", encoding = "UTF-8")
seccion <- import("seccion.csv", setclass = "data.table", encoding = "UTF-8")
deptnames <- import("Departamentos/deptnames.csv", setclass = "data.table", encoding = "UTF-8")
deptGEO <- import("Departamentos/deptnamesGEO.csv", setclass = "data.table", encoding = "UTF-8")
}
seccion$nombre <- toupper(seccion$nombre)
seccion <- rename(seccion, DEPARTA = nombre); head(seccion)
distrito$nombre <- toupper(distrito$nombre)
distrito <- rename(distrito, PROVINCIA = nombre); head(distrito)
seccionxdistrito <- merge(seccion, distrito, by = "distrito_id")
seccionxdistrito <- seccionxdistrito[, -c(3)]; head(seccionxdistrito); rm(seccion, distrito)
colnames(deptnames) <- c("DEPARTAMENTO", "NOMBRE"); head(deptnames)
colnames(deptGEO) <- c("index", "NOMBRE"); head(deptGEO)
nrow(deptnames); nrow(deptGEO)
deptnames$NOMBRE <- gsub("\xbe", "ñ", deptnames$NOMBRE)
deptnames$NOMBRE <- gsub('"|\\d+|<be>', '', deptnames$NOMBRE); head(deptnames)
deptnames$NOMBRE <- trimws(deptnames$NOMBRE) # Remove leading/trailing spaces
rm(list=ls())
# # # Geometrías departamentales # # #
dptos <- st_read("~/Code/Political_Economy/eco pol 2023/datos_mesas/Departamentos/departamentos.shp"); names(dptos)
dptos <- dptos[dptos$OBJECTID!="488"&dptos$OBJECTID!="489",] # Elimina Islas Malvinas y Antartida
gc() # Not to overload
head(dptos)
{
distrito <- import("distrito.csv", setclass = "data.table", encoding = "UTF-8")
seccion <- import("seccion.csv", setclass = "data.table", encoding = "UTF-8")
deptnames <- import("Departamentos/deptnames.csv", setclass = "data.table", encoding = "UTF-8")
deptGEO <- import("Departamentos/deptnamesGEO.csv", setclass = "data.table", encoding = "UTF-8")
}
seccion$nombre <- toupper(seccion$nombre)
seccion <- rename(seccion, DEPARTA = nombre); head(seccion)
distrito$nombre <- toupper(distrito$nombre)
distrito <- rename(distrito, PROVINCIA = nombre); head(distrito)
seccionxdistrito <- merge(seccion, distrito, by = "distrito_id")
seccionxdistrito <- seccionxdistrito[, -c(3)]; head(seccionxdistrito); rm(seccion, distrito)
colnames(deptnames) <- c("DEPARTAMENTO", "NOMBRE"); head(deptnames)
colnames(deptGEO) <- c("index", "NOMBRE"); head(deptGEO)
nrow(deptnames); nrow(deptGEO)
deptnames$NOMBRE <- gsub("\xbe", "Ñ", deptnames$NOMBRE)
deptnames$NOMBRE <- gsub('"|\\d+|<be>', '', deptnames$NOMBRE); head(deptnames)
deptnames$NOMBRE <- trimws(deptnames$NOMBRE) # Remove leading/trailing spaces
dept <- merge(deptnames, deptGEO, by = "NOMBRE")
nrow(dept)
# check missing
na <- is.na(dept); sum(na)
rm(na)
library(fuzzyjoin)
library(stringdist)
fuzzy_result <- stringdist_left_join(deptnames, deptGEO, by = c("NOMBRE" = "NOMBRE"), method = "jw", max_dist = 0.1)
head(fuzzy_result)
na <- is.na(fuzzy_result$index); sum(na)
na <- is.na(fuzzy_result$NOMBRE.y); sum(na)
