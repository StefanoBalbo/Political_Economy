head(deptnames)
head(deptGEO)
deptnames$NOMBRE <- gsub("[^[:print:]]", "", deptnames$NOMBRE)
deptGEO$NOMBRE <- gsub("[^[:print:]]", "", deptGEO$NOMBRE)
head(deptnames)
head(deptGEO)
class(deptnames); class(deptGEO)
class(deptnames$NOMBRE); class(deptGEO$NOMBRE)
# check nombres identicos #
mismatched_names <- setdiff(unique(deptnames$NOMBRE), unique(deptGEO$NOMBRE)); mismatched_names
mismatched_deptnames <- deptnames[deptnames$NOMBRE %in% mismatched_names,]; head(mismatched_deptnames)
mismatched_deptGEO <- deptGEO[deptGEO$NOMBRE %in% mismatched_names,]; head(mismatched_deptGEO)
dept <- merge(deptnames, deptGEO, by = "NOMBRE", ignore.case = TRUE); nrow(dept)
rm(list=ls())
# # # Geometrías departamentales # # #
dptos <- st_read("~/Code/Political_Economy/eco pol 2023/datos_mesas/Departamentos/departamentos.shp"); names(dptos)
dptos <- dptos[dptos$OBJECTID!="488"&dptos$OBJECTID!="489",] # Elimina Islas Malvinas y Antartida
gc() # Not to overload
head(dptos)
{
# Base mesas
distrito <- import("distrito.csv", setclass = "data.table", encoding = "UTF-8")
seccion <- import("seccion.csv", setclass = "data.table", encoding = "UTF-8")
# Seba
deptnames <- import("Departamentos/deptnames.csv", setclass = "data.table", encoding = "UTF-8")
deptGEO <- import("Departamentos/deptnamesGEO.csv", setclass = "data.table", encoding = "UTF-8")
}
seccion$nombre <- toupper(seccion$nombre)
seccion <- rename(seccion, DEPARTA = nombre); head(seccion)
distrito$nombre <- toupper(distrito$nombre)
distrito <- rename(distrito, PROVINCIA = nombre); head(distrito)
seccionxdistrito <- merge(seccion, distrito, by = "distrito_id")
seccionxdistrito <- seccionxdistrito[, -c(3)]; head(seccionxdistrito); rm(seccion, distrito)
colnames(deptnames) <- c("DEPARTAMENTO", "NOMBRE"); head(deptnames)
colnames(deptGEO) <- c("index", "NOMBRE"); head(deptGEO)
nrow(deptnames); nrow(deptGEO)
# Quitamos ruido en nombres
Encoding(deptnames$NOMBRE) <- "UTF-8"
Encoding(deptGEO$NOMBRE) <- "UTF-8"
head(deptGEO)
head(deptnames)
deptnames$NOMBRE <- iconv(deptnames$NOMBRE, "latin1", "UTF-8")
deptGEO$NOMBRE <- iconv(deptGEO$NOMBRE, "latin1", "UTF-8")
head(deptGEO)
head(deptnames)
deptnames$NOMBRE <- gsub("¾", "Ñ", deptnames$NOMBRE)
deptGEO$NOMBRE <- gsub("¾", "Ñ", deptGEO$NOMBRE)
head(deptGEO)
head(deptnames)
deptnames$NOMBRE <- gsub('"|\\d+|<be>', '', deptnames$NOMBRE)
deptGEO$NOMBRE <- gsub('"|\\d+|<be>', '', deptGEO$NOMBRE)
head(deptGEO)
head(deptnames)
rm(list=ls())
# # # Geometrías departamentales # # #
dptos <- st_read("~/Code/Political_Economy/eco pol 2023/datos_mesas/Departamentos/departamentos.shp"); names(dptos)
dptos <- dptos[dptos$OBJECTID!="488"&dptos$OBJECTID!="489",] # Elimina Islas Malvinas y Antartida
gc() # Not to overload
head(dptos)
{
# Base mesas
distrito <- import("distrito.csv", setclass = "data.table", encoding = "UTF-8")
seccion <- import("seccion.csv", setclass = "data.table", encoding = "UTF-8")
# Seba
deptnames <- import("Departamentos/deptnames.csv", setclass = "data.table", encoding = "UTF-8")
deptGEO <- import("Departamentos/deptnamesGEO.csv", setclass = "data.table", encoding = "UTF-8")
}
seccion$nombre <- toupper(seccion$nombre)
seccion <- rename(seccion, DEPARTA = nombre); head(seccion)
distrito$nombre <- toupper(distrito$nombre)
distrito <- rename(distrito, PROVINCIA = nombre); head(distrito)
seccionxdistrito <- merge(seccion, distrito, by = "distrito_id")
seccionxdistrito <- seccionxdistrito[, -c(3)]; head(seccionxdistrito); rm(seccion, distrito)
colnames(deptnames) <- c("DEPARTAMENTO", "NOMBRE"); head(deptnames)
colnames(deptGEO) <- c("index", "NOMBRE"); head(deptGEO)
nrow(deptnames); nrow(deptGEO)
# Quitamos ruido en nombres
Encoding(deptnames$NOMBRE) <- "UTF-8"
Encoding(deptGEO$NOMBRE) <- "UTF-8"
head(deptGEO)
head(deptnames)
deptnames$NOMBRE <- iconv(deptnames$NOMBRE, "latin1", "UTF-8")
deptGEO$NOMBRE <- iconv(deptGEO$NOMBRE, "latin1", "UTF-8")
head(deptGEO)
head(deptnames)
deptnames$NOMBRE <- gsub("¾", "Ñ", deptnames$NOMBRE)
deptGEO$NOMBRE <- gsub("¾", "Ñ", deptGEO$NOMBRE)
head(deptGEO)
head(deptnames)
library(stringr)
deptGEO$NOMBRE <- str_replace_all(deptGEO$NOMBRE, '"', '')
deptnames$NOMBRE <- str_replace_all(deptnames$NOMBRE, '"', '')
head(deptGEO)
head(deptnames)
deptnames$NOMBRE <- toupper(deptnames$NOMBRE)
deptGEO$NOMBRE <- toupper(deptGEO$NOMBRE)
deptnames$NOMBRE <- trimws(deptnames$NOMBRE)
deptGEO$NOMBRE <- trimws(deptGEO$NOMBRE)
head(deptGEO)
head(deptnames)
deptnames$NOMBRE <- gsub("[^[:print:]]", "", deptnames$NOMBRE)
deptGEO$NOMBRE <- gsub("[^[:print:]]", "", deptGEO$NOMBRE)
head(deptGEO)
head(deptnames)
class(deptnames); class(deptGEO)
class(deptnames$NOMBRE); class(deptGEO$NOMBRE)
# check nombres identicos #
mismatched_names <- setdiff(unique(deptnames$NOMBRE), unique(deptGEO$NOMBRE)); mismatched_names
mismatched_deptnames <- deptnames[deptnames$NOMBRE %in% mismatched_names,]; head(mismatched_deptnames)
mismatched_deptGEO <- deptGEO[deptGEO$NOMBRE %in% mismatched_names,]; head(mismatched_deptGEO)
# check missing #
na <- is.na(dept); sum(na)
rm(na)
library(fuzzyjoin)
library(stringdist)
fuzzy_result <- stringdist_left_join(deptnames, deptGEO, by = c("NOMBRE" = "NOMBRE"), method = "jw", max_dist = 0.1)
rm(list=ls())
# # # Geometrías departamentales # # #
dptos <- st_read("~/Code/Political_Economy/eco pol 2023/datos_mesas/Departamentos/departamentos.shp"); names(dptos)
dptos <- dptos[dptos$OBJECTID!="488"&dptos$OBJECTID!="489",] # Elimina Islas Malvinas y Antartida
gc() # Not to overload
head(dptos)
{
# Base mesas
distrito <- import("distrito.csv", setclass = "data.table", encoding = "UTF-8")
seccion <- import("seccion.csv", setclass = "data.table", encoding = "UTF-8")
# Seba
deptnames <- import("Departamentos/deptnames.csv", setclass = "data.table", encoding = "UTF-8")
deptGEO <- import("Departamentos/deptnamesGEO.csv", setclass = "data.table", encoding = "UTF-8")
}
seccion$nombre <- toupper(seccion$nombre)
seccion <- rename(seccion, DEPARTA = nombre); head(seccion)
distrito$nombre <- toupper(distrito$nombre)
distrito <- rename(distrito, PROVINCIA = nombre); head(distrito)
seccionxdistrito <- merge(seccion, distrito, by = "distrito_id")
seccionxdistrito <- seccionxdistrito[, -c(3)]; head(seccionxdistrito); rm(seccion, distrito)
colnames(deptnames) <- c("DEPARTAMENTO", "NOMBRE"); head(deptnames)
colnames(deptGEO) <- c("index", "NOMBRE"); head(deptGEO)
nrow(deptnames); nrow(deptGEO)
# Quitamos ruido en nombres
Encoding(deptnames$NOMBRE) <- "UTF-8"
Encoding(deptGEO$NOMBRE) <- "UTF-8"
head(deptGEO)
head(deptnames)
deptnames$NOMBRE <- iconv(deptnames$NOMBRE, "latin1", "UTF-8")
deptGEO$NOMBRE <- iconv(deptGEO$NOMBRE, "latin1", "UTF-8")
head(deptGEO)
head(deptnames)
deptnames$NOMBRE <- gsub("¾", "Ñ", deptnames$NOMBRE)
deptGEO$NOMBRE <- gsub("¾", "Ñ", deptGEO$NOMBRE)
head(deptGEO)
head(deptnames)
deptGEO$NOMBRE <- str_replace_all(deptGEO$NOMBRE, '"', '')
deptnames$NOMBRE <- str_replace_all(deptnames$NOMBRE, '"', '')
head(deptGEO)
head(deptnames)
deptnames$NOMBRE <- toupper(deptnames$NOMBRE)
deptGEO$NOMBRE <- toupper(deptGEO$NOMBRE)
deptnames$NOMBRE <- trimws(deptnames$NOMBRE)
deptGEO$NOMBRE <- trimws(deptGEO$NOMBRE)
head(deptGEO)
head(deptnames)
deptnames$NOMBRE <- gsub("[^[:print:]]", "", deptnames$NOMBRE)
deptGEO$NOMBRE <- gsub("[^[:print:]]", "", deptGEO$NOMBRE)
head(deptGEO)
head(deptnames)
library(stringr)
rm(list=ls())
# # # Geometrías departamentales # # #
dptos <- st_read("~/Code/Political_Economy/eco pol 2023/datos_mesas/Departamentos/departamentos.shp"); names(dptos)
dptos <- dptos[dptos$OBJECTID!="488"&dptos$OBJECTID!="489",] # Elimina Islas Malvinas y Antartida
gc() # Not to overload
head(dptos)
{
# Base mesas
distrito <- import("distrito.csv", setclass = "data.table", encoding = "UTF-8")
seccion <- import("seccion.csv", setclass = "data.table", encoding = "UTF-8")
# Seba
deptnames <- import("Departamentos/deptnames.csv", setclass = "data.table", encoding = "UTF-8")
deptGEO <- import("Departamentos/deptnamesGEO.csv", setclass = "data.table", encoding = "UTF-8")
}
seccion$nombre <- toupper(seccion$nombre)
seccion <- rename(seccion, DEPARTA = nombre); head(seccion)
distrito$nombre <- toupper(distrito$nombre)
distrito <- rename(distrito, PROVINCIA = nombre); head(distrito)
seccionxdistrito <- merge(seccion, distrito, by = "distrito_id")
seccionxdistrito <- seccionxdistrito[, -c(3)]; head(seccionxdistrito); rm(seccion, distrito)
colnames(deptnames) <- c("DEPARTAMENTO", "NOMBRE"); head(deptnames)
colnames(deptGEO) <- c("index", "NOMBRE"); head(deptGEO)
nrow(deptnames); nrow(deptGEO)
# Quitamos ruido en nombres
Encoding(deptnames$NOMBRE) <- "UTF-8"
Encoding(deptGEO$NOMBRE) <- "UTF-8"
head(deptGEO)
head(deptnames)
deptnames$NOMBRE <- iconv(deptnames$NOMBRE, "latin1", "UTF-8")
deptGEO$NOMBRE <- iconv(deptGEO$NOMBRE, "latin1", "UTF-8")
head(deptGEO)
head(deptnames)
deptnames$NOMBRE <- gsub("¾", "Ñ", deptnames$NOMBRE)
deptGEO$NOMBRE <- gsub("¾", "Ñ", deptGEO$NOMBRE)
head(deptGEO)
head(deptnames)
deptnames$NOMBRE <- str_replace(deptnames$NOMBRE, "^[0-9]+\\s", "")
deptGEO$NOMBRE <- str_replace(deptGEO$NOMBRE, "^[0-9]+\\s", "")
head(deptGEO)
head(deptnames)
deptGEO$NOMBRE <- str_replace_all(deptGEO$NOMBRE, '"', '')
deptnames$NOMBRE <- str_replace_all(deptnames$NOMBRE, '"', '')
head(deptGEO)
head(deptnames)
deptnames$NOMBRE <- toupper(deptnames$NOMBRE)
deptGEO$NOMBRE <- toupper(deptGEO$NOMBRE)
deptnames$NOMBRE <- trimws(deptnames$NOMBRE)
deptGEO$NOMBRE <- trimws(deptGEO$NOMBRE)
head(deptGEO)
head(deptnames)
deptnames$NOMBRE <- gsub("[^[:print:]]", "", deptnames$NOMBRE)
deptGEO$NOMBRE <- gsub("[^[:print:]]", "", deptGEO$NOMBRE)
head(deptGEO)
head(deptnames)
class(deptnames); class(deptGEO)
class(deptnames$NOMBRE); class(deptGEO$NOMBRE)
# check nombres identicos #
mismatched_names <- setdiff(unique(deptnames$NOMBRE), unique(deptGEO$NOMBRE)); mismatched_names
mismatched_deptnames <- deptnames[deptnames$NOMBRE %in% mismatched_names,]; head(mismatched_deptnames)
mismatched_deptGEO <- deptGEO[deptGEO$NOMBRE %in% mismatched_names,]; head(mismatched_deptGEO)
rm(mismatched_deptGEO, #mismatched_deptnames)
rm(mismatched_deptGEO, mismatched_deptnames)
=
rm(mismatched_deptGEO, mismatched_deptnames)
dept <- merge(deptnames, deptGEO, by = "NOMBRE", ignore.case = TRUE); nrow(dept)
head(dept)
tail(dept)
identical(deptnames, deptGEO)
identical(deptnames$NOMBRE, deptGEO$NOMBRE)
# # # Geometrías departamentales # # #
dptos <- st_read("~/Code/Political_Economy/eco pol 2023/datos_mesas/Departamentos/departamentos.shp"); names(dptos)
dptos <- dptos[dptos$OBJECTID!="488"&dptos$OBJECTID!="489",] # Elimina Islas Malvinas y Antartida
gc() # Not to overload
head(dptos)
{
# Base mesas
distrito <- import("distrito.csv", setclass = "data.table", encoding = "UTF-8")
seccion <- import("seccion.csv", setclass = "data.table", encoding = "UTF-8")
# Seba
deptnames <- import("Departamentos/deptnames.csv", setclass = "data.table", encoding = "UTF-8")
deptGEO <- import("Departamentos/deptnamesGEO.csv", setclass = "data.table", encoding = "UTF-8")
}
seccion$nombre <- toupper(seccion$nombre)
seccion <- rename(seccion, DEPARTA = nombre); head(seccion)
distrito$nombre <- toupper(distrito$nombre)
distrito <- rename(distrito, PROVINCIA = nombre); head(distrito)
seccionxdistrito <- merge(seccion, distrito, by = "distrito_id")
seccionxdistrito <- seccionxdistrito[, -c(3)]; head(seccionxdistrito); rm(seccion, distrito)
colnames(deptnames) <- c("DEPARTAMENTO", "NOMBRE"); head(deptnames)
colnames(deptGEO) <- c("index", "NOMBRE"); head(deptGEO)
nrow(deptnames); nrow(deptGEO)
# Quitamos ruido en nombres
Encoding(deptnames$NOMBRE) <- "UTF-8"
Encoding(deptGEO$NOMBRE) <- "UTF-8"
head(deptGEO)
head(deptnames)
deptnames$NOMBRE <- iconv(deptnames$NOMBRE, "latin1", "UTF-8")
deptGEO$NOMBRE <- iconv(deptGEO$NOMBRE, "latin1", "UTF-8")
head(deptGEO)
head(deptnames)
deptnames$NOMBRE <- gsub("¾", "Ñ", deptnames$NOMBRE)
deptGEO$NOMBRE <- gsub("¾", "Ñ", deptGEO$NOMBRE)
head(deptGEO)
head(deptnames)
deptnames$NOMBRE <- str_replace(deptnames$NOMBRE, "^[0-9]+\\s", "")
deptGEO$NOMBRE <- str_replace(deptGEO$NOMBRE, "^[0-9]+\\s", "")
head(deptGEO)
head(deptnames)
deptGEO$NOMBRE <- str_replace_all(deptGEO$NOMBRE, '"', '')
deptnames$NOMBRE <- str_replace_all(deptnames$NOMBRE, '"', '')
head(deptGEO)
head(deptnames)
deptnames$NOMBRE <- toupper(deptnames$NOMBRE)
deptGEO$NOMBRE <- toupper(deptGEO$NOMBRE)
deptnames$NOMBRE <- trimws(deptnames$NOMBRE)
deptGEO$NOMBRE <- trimws(deptGEO$NOMBRE)
head(deptGEO)
head(deptnames)
deptnames$NOMBRE <- gsub("[^[:print:]]", "", deptnames$NOMBRE)
deptGEO$NOMBRE <- gsub("[^[:print:]]", "", deptGEO$NOMBRE)
head(deptGEO)
head(deptnames)
class(deptnames); class(deptGEO)
class(deptnames$NOMBRE); class(deptGEO$NOMBRE)
fwrite(deptGEO, "deptnames2.csv")
fwrite(deptnames, "deptGEO2.csv")
fwrite(deptGEO, "Departamentos/deptnames2.csv")
fwrite(deptnames, "Departamentos/deptGEO2.csv")
View(deptGEO)
View(deptnames)
# check missing #
na <- is.na(dept); sum(na)
rm(na)
library(fuzzyjoin)
library(stringdist)
fuzzy_result <- stringdist_left_join(deptnames, deptGEO, by = c("NOMBRE" = "NOMBRE"), method = "jw", max_dist = 0.1)
head(fuzzy_result)
na <- is.na(fuzzy_result$index); sum(na)
na <- is.na(fuzzy_result$NOMBRE.y); sum(na)
rm(na, fuzzy_result)
head(dptos)
head(seccionxdistrito)
# # # Geometrías departamentales # # #
dptos <- st_read("~/Code/Political_Economy/eco pol 2023/datos_mesas/Departamentos/departamentos.shp"); names(dptos)
dptos <- dptos[dptos$OBJECTID!="488"&dptos$OBJECTID!="489",] # Elimina Islas Malvinas y Antartida
gc() # Not to overload
head(dptos)
head(deptGEO)
head(deptnames)
head(seccionxdistrito)
View(seccionxdistrito)
rm(list=ls())
################ ################ MAPA DEPARTAMENTAL 2023 ################ ################
{
# Base mesas
distrito <- import("distrito.csv", setclass = "data.table", encoding = "UTF-8")
seccion <- import("seccion.csv", setclass = "data.table", encoding = "UTF-8")
# Seba
deptnames <- import("Departamentos/deptnames.csv", setclass = "data.table", encoding = "UTF-8")
deptGEO <- import("Departamentos/deptnamesGEO.csv", setclass = "data.table", encoding = "UTF-8")
}
seccion$nombre <- toupper(seccion$nombre)
seccion <- rename(seccion, DEPARTA = nombre); head(seccion)
distrito$nombre <- toupper(distrito$nombre)
distrito <- rename(distrito, PROVINCIA = nombre); head(distrito)
seccionxdistrito <- merge(seccion, distrito, by = "distrito_id")
seccionxdistrito <- seccionxdistrito[, -c(3)]; head(seccionxdistrito); rm(seccion, distrito)
colnames(deptnames) <- c("DEPARTAMENTO", "NOMBRE"); head(deptnames)
colnames(deptGEO) <- c("index", "NOMBRE"); head(deptGEO)
nrow(deptnames); nrow(deptGEO)
# Quitamos ruido en nombres
Encoding(deptnames$NOMBRE) <- "UTF-8"
Encoding(deptGEO$NOMBRE) <- "UTF-8"
head(deptGEO)
head(deptnames)
deptnames$NOMBRE <- iconv(deptnames$NOMBRE, "latin1", "UTF-8")
deptGEO$NOMBRE <- iconv(deptGEO$NOMBRE, "latin1", "UTF-8")
head(deptGEO)
head(deptnames)
deptnames$NOMBRE <- gsub("¾", "Ñ", deptnames$NOMBRE)
deptGEO$NOMBRE <- gsub("¾", "Ñ", deptGEO$NOMBRE)
head(deptGEO)
head(deptnames)
deptnames$NOMBRE <- str_replace(deptnames$NOMBRE, "^[0-9]+\\s", "")
deptGEO$NOMBRE <- str_replace(deptGEO$NOMBRE, "^[0-9]+\\s", "")
head(deptGEO)
head(deptnames)
deptGEO$NOMBRE <- str_replace_all(deptGEO$NOMBRE, '"', '')
deptnames$NOMBRE <- str_replace_all(deptnames$NOMBRE, '"', '')
head(deptGEO)
head(deptnames)
deptnames$NOMBRE <- toupper(deptnames$NOMBRE)
deptGEO$NOMBRE <- toupper(deptGEO$NOMBRE)
deptnames$NOMBRE <- trimws(deptnames$NOMBRE)
deptGEO$NOMBRE <- trimws(deptGEO$NOMBRE)
head(deptGEO)
head(deptnames)
deptnames$NOMBRE <- gsub("[^[:print:]]", "", deptnames$NOMBRE)
deptGEO$NOMBRE <- gsub("[^[:print:]]", "", deptGEO$NOMBRE)
head(deptGEO)
head(deptnames)
class(deptnames); class(deptGEO)
class(deptnames$NOMBRE); class(deptGEO$NOMBRE)
identical(deptnames$NOMBRE, deptGEO$NOMBRE)
deptnames$index <- as.integer(str_extract(deptnames$DEPARTAMENTO, "\\d+"))
head(deptnames)
head(deptGEO)
identical(deptnames$index, deptGEO$index)
class(deptnames$index); class(deptGEO$index)
dept <- left_join(deptnames, deptGEO, by = "index"); head(dept)
head(deptGEO)
head(deptnames)
rm(list=ls())
################ ################ MAPA DEPARTAMENTAL 2023 ################ ################
{
# Base mesas
distrito <- import("distrito.csv", setclass = "data.table", encoding = "UTF-8")
seccion <- import("seccion.csv", setclass = "data.table", encoding = "UTF-8")
# Seba
deptnames <- import("Departamentos/deptnames.csv", setclass = "data.table", encoding = "UTF-8")
deptGEO <- import("Departamentos/deptnamesGEO.csv", setclass = "data.table", encoding = "UTF-8")
}
seccion$nombre <- toupper(seccion$nombre)
seccion <- rename(seccion, DEPARTA = nombre); head(seccion)
distrito$nombre <- toupper(distrito$nombre)
distrito <- rename(distrito, PROVINCIA = nombre); head(distrito)
seccionxdistrito <- merge(seccion, distrito, by = "distrito_id")
seccionxdistrito <- seccionxdistrito[, -c(3)]; head(seccionxdistrito); rm(seccion, distrito)
colnames(deptnames) <- c("DEPARTAMENTO", "NOMBRE"); head(deptnames)
colnames(deptGEO) <- c("index", "NOMBRE"); head(deptGEO)
nrow(deptnames); nrow(deptGEO)
# Quitamos ruido en nombres
Encoding(deptnames$NOMBRE) <- "UTF-8"
Encoding(deptGEO$NOMBRE) <- "UTF-8"
head(deptGEO)
head(deptnames)
deptnames$NOMBRE <- iconv(deptnames$NOMBRE, "latin1", "UTF-8")
deptGEO$NOMBRE <- iconv(deptGEO$NOMBRE, "latin1", "UTF-8")
head(deptGEO)
head(deptnames)
deptnames$NOMBRE <- gsub("¾", "Ñ", deptnames$NOMBRE)
deptGEO$NOMBRE <- gsub("¾", "Ñ", deptGEO$NOMBRE)
head(deptGEO)
head(deptnames)
deptnames$NOMBRE <- str_replace(deptnames$NOMBRE, "^[0-9]+\\s", "")
deptGEO$NOMBRE <- str_replace(deptGEO$NOMBRE, "^[0-9]+\\s", "")
head(deptGEO)
head(deptnames)
rm(list=ls())
################ ################ MAPA DEPARTAMENTAL 2023 ################ ################
{
# Base mesas
distrito <- import("distrito.csv", setclass = "data.table", encoding = "UTF-8")
seccion <- import("seccion.csv", setclass = "data.table", encoding = "UTF-8")
# Seba
deptnames <- import("Departamentos/deptnames.csv", setclass = "data.table", encoding = "UTF-8")
deptGEO <- import("Departamentos/deptnamesGEO.csv", setclass = "data.table", encoding = "UTF-8")
}
seccion$nombre <- toupper(seccion$nombre)
seccion <- rename(seccion, DEPARTA = nombre); head(seccion)
distrito$nombre <- toupper(distrito$nombre)
distrito <- rename(distrito, PROVINCIA = nombre); head(distrito)
seccionxdistrito <- merge(seccion, distrito, by = "distrito_id")
seccionxdistrito <- seccionxdistrito[, -c(3)]; head(seccionxdistrito); rm(seccion, distrito)
colnames(deptnames) <- c("DEPARTAMENTO", "NOMBRE"); head(deptnames)
colnames(deptGEO) <- c("index", "NOMBRE"); head(deptGEO)
nrow(deptnames); nrow(deptGEO)
# Quitamos ruido en nombres
Encoding(deptnames$NOMBRE) <- "UTF-8"
Encoding(deptGEO$NOMBRE) <- "UTF-8"
head(deptGEO)
head(deptnames)
deptnames$NOMBRE <- iconv(deptnames$NOMBRE, "latin1", "UTF-8")
deptGEO$NOMBRE <- iconv(deptGEO$NOMBRE, "latin1", "UTF-8")
head(deptGEO)
head(deptnames)
deptnames$NOMBRE <- gsub("¾", "Ñ", deptnames$NOMBRE)
deptGEO$NOMBRE <- gsub("¾", "Ñ", deptGEO$NOMBRE)
head(deptGEO)
head(deptnames)
deptnames$NOMBRE <- str_replace(deptnames$NOMBRE, "^[0-9]+\\s", "")
deptGEO$NOMBRE <- str_replace_all(deptGEO$NOMBRE, '"', '')
deptnames$NOMBRE <- str_replace_all(deptnames$NOMBRE, '"', '')
head(deptGEO)
head(deptnames)
deptnames$NOMBRE <- toupper(deptnames$NOMBRE)
deptGEO$NOMBRE <- toupper(deptGEO$NOMBRE)
deptnames$NOMBRE <- trimws(deptnames$NOMBRE)
deptGEO$NOMBRE <- trimws(deptGEO$NOMBRE)
head(deptGEO)
head(deptnames)
deptnames$NOMBRE <- gsub("[^[:print:]]", "", deptnames$NOMBRE)
deptGEO$NOMBRE <- gsub("[^[:print:]]", "", deptGEO$NOMBRE)
head(deptGEO)
head(deptnames)
class(deptnames); class(deptGEO)
class(deptnames$NOMBRE); class(deptGEO$NOMBRE)
deptnames$index <- as.integer(str_extract(deptnames$DEPARTAMENTO, "\\d+"))
head(deptnames)
head(deptGEO)
identical(deptnames$NOMBRE, deptGEO$NOMBRE)
identical(deptnames$index, deptGEO$index)
class(deptnames$index); class(deptGEO$index)
dept <- left_join(deptnames, deptGEO, by = "NOMBRE"); head(dept)
fwrite(dept, "Departamentos/namesdept.csv")
rm(deptGEO); rm(deptnames)
head(dept)
head(seccionxdistrito)
identical(dept$NOMBRE, seccionxdistrito$DEPARTA)
# # # Geometrías departamentales # # #
dptos <- st_read("~/Code/Political_Economy/eco pol 2023/datos_mesas/Departamentos/departamentos.shp"); names(dptos)
dptos <- dptos[dptos$OBJECTID!="488"&dptos$OBJECTID!="489",] # Elimina Islas Malvinas y Antartida
gc() # Not to overload
head(dptos)
head(dept)
head(seccionxdistrito)
identical(dept$NOMBRE, seccionxdistrito$DEPARTA)
identical(dept$NOMBRE, dptos$DEPARTA)
identical(dptos$DEPARTA, seccionxdistrito$DEPARTA)
# Mapeamos
{
capa_departamental <- st_read("~/Code/Political_Economy/eco pol 2023/datos_mesas/departamentos.gpkg")
GEN2023 <- import("GEN2023.csv", setclass =" data.table", encoding="UTF-8")
PASO2023 <- import("PASO2023.csv", setclass =" data.table", encoding="UTF-8")
#BALL2023 <- import("BALL2023.csv", setclass =" data.table", encoding="UTF-8")
}
GEN2023 <- import("GEN2023.csv", setclass =" data.table", encoding="UTF-8")
library(installr)
library(R.utils)
library(dplyr)
library(data.table)
library(tidyverse)
library(rvest)
library(janitor)
library(rio)
library(here)
library(tmap)
library(sf)
library(glue)
library(scales)
library(htmltools)
library(leaflet)
library(stringr)
gc()
GEN2023 <- import("GEN2023.csv", setclass =" data.table", encoding="UTF-8")
