datos_provincias$cargo_id == 5 ~ "Sen_Prov",
datos_provincias$cargo_id == 6 ~ "Dip_Prov",
datos_provincias$cargo_id == 7 ~ "Intendente",
datos_provincias$cargo_id == 8 ~ "Mercosur_Nac",
datos_provincias$cargo_id == 9 ~ "Mercosur_Prov",
datos_provincias$cargo_id == 10 ~ "Concejales")
table(datos_provincias$cargo_nombre)
head(datos_provincias)
rm(cargos)
# # # Elección tipo y año # # #
head(elecciontipo)
elecciontipo <- elecciontipo[, -c(2, 7)]; names(elecciontipo)
gc() # Not to overload
datos <- left_join(datos_provincias, elecciontipo, by = "eleccion_id")
head(datos)
table(datos$eleccion_tipo)
names(datos); rm(datos_provincias, elecciontipo)
# # # Tipo de voto # # #
names(datos)
head(tdv)
gc() # Not to overload
datos2 <- left_join(datos, tdv, by = "tipovoto_id"); head(datos2)
datos2 <- dplyr::rename(datos2, tdv = nombre); names(datos2)
datos2 <- datos2[, -c(18)]
head(datos2)
datos <- datos2; rm(datos2, tdv); names(datos)
# # # Fix GENERAL =/= GENERALES  # # #
head(datos)
table(datos$eleccion_tipo)
gc() # Not to overload
datos$eleccion_tipo <- ifelse(datos$eleccion_tipo == "GENERAL",
"GENERALES", datos$eleccion_tipo); table(datos$eleccion_tipo)
table(datos$tdv)
table(datos$distrito_nombre)
# # # Agrupaciones  # # #
names(agrupaciones)
agrupaciones <- agrupaciones[, -4]
names(datos)
head(agrupaciones)
head(datos)
table(datos$cargo_nombre)
#############################################################################################
############################# ELECCIONES PRESIDENCIALES #####################################
#############################################################################################
{
print("Filtramos elecciones presidenciales")
datos_presidencial <- datos %>%
filter(cargo_nombre == "Presidente")
}
table(datos$seccion_id)
table(datos$distrito_id)
rm(datos); head(datos_presidencial)
table(datos_presidencial$seccion_id)
table(datos_presidencial$distrito_id)
# # # Unificación nombres y recategorización # # #
{
agrupaciones$nombre <- gsub("ALIANZA COMPROMISO FEDERAL", "Alianza Compromiso Federal", agrupaciones$nombre, fixed=TRUE)
agrupaciones$nombre <- gsub("ALIANZA FRENTE DE IZQUIERDA Y DE LOS TRABAJADORES", "Alianza Frente de Izquierda y de los Trabajadores", agrupaciones$nombre, fixed=TRUE)
agrupaciones$nombre <- gsub("ALIANZA FRENTE AMPLIO PROGRESISTA", "Alianza Frente Amplio Progresista", agrupaciones$nombre, fixed=TRUE)
agrupaciones$nombre <- gsub("ALIANZA FRENTE PARA LA VICTORIA", "Alianza Frente para la Victoria", agrupaciones$nombre, fixed=TRUE)
agrupaciones$nombre <- gsub("ALIANZA FRENTE POPULAR", "Alianza Frente Popular", agrupaciones$nombre, fixed=TRUE)
agrupaciones$nombre <- gsub("ALIANZA UNION PARA EL DESARROLLO SOCIAL - UDESO", "Alianza Unión para el Desarrollo Social", agrupaciones$nombre, fixed=TRUE)
agrupaciones$nombre <- gsub("COALICION CIVICA - AFIRMACION PARA UNA REPUBLICA IGUALITARIA (ARI)", "COALICION CIVICA ARI", agrupaciones$nombre, fixed=TRUE)
agrupaciones$nombre <- gsub("COALICIÓN CÍVICA - AFIRMACIÓN PARA UNA REPÚBLICA IGUALITARIA (ARI)", "COALICION CIVICA ARI", agrupaciones$nombre, fixed=TRUE)
agrupaciones$nombre <- gsub("Coalición Cívica - Afirmación para una República Igualitaria ARI", "COALICION CIVICA ARI", agrupaciones$nombre, fixed=TRUE)
agrupaciones$nombre <- gsub("COALICION CIVICA - ARI", "COALICION CIVICA ARI", agrupaciones$nombre, fixed=TRUE)
agrupaciones$nombre <- gsub("FRENTE DE IZQUIERDA Y DE TRABAJADORES - UNIDAD", "Alianza Frente de Izquierda y de los Trabajadores", agrupaciones$nombre, fixed=TRUE)
agrupaciones$nombre <- gsub("FRENTE DE IZQUIERDA Y DE TRABAJADORES UNIDAD", "Alianza Frente de Izquierda y de los Trabajadores", agrupaciones$nombre, fixed=TRUE)
agrupaciones$nombre <- gsub("FRENTE PARA LA VICTORIA", "Alianza Frente para la Victoria", agrupaciones$nombre, fixed=TRUE)
agrupaciones$nombre <- gsub("MOVIMIENTO IZQUIERDA JUVENTUD DIGNIDAD", "MOVIMIENTO IZQUIERDA JUVENTUD Y DIGNIDAD", agrupaciones$nombre, fixed=TRUE)
agrupaciones$nombre <- gsub("MOVIMIENTO LIBRES DEL SUR", "Movimiento Libres del Sur", agrupaciones$nombre, fixed=TRUE)
agrupaciones$nombre <- gsub("MOVIMIENTO IZQUIERDA JUVENTUD DIGNIDAD", "MOVIMIENTO IZQUIERDA JUVENTUD Y DIGNIDAD", agrupaciones$nombre, fixed=TRUE)
agrupaciones$nombre <- gsub("MOVIMIENTO IZQUIERDA JUVENTUD DIGNIDAD", "MOVIMIENTO IZQUIERDA JUVENTUD Y DIGNIDAD", agrupaciones$nombre, fixed=TRUE)
}
head(agrupaciones)
head(datos_presidencial)
gc() # Not to overload
datos_agrupacion <- left_join(datos_presidencial, agrupaciones, by = c("agrupacion_id", "eleccion_id"))
head(datos_agrupacion)
datos_agrupacion <- rename(datos_agrupacion, agrupacion_nombre = nombre)
names(datos_agrupacion); rm(agrupaciones)
datos_agrupacion <- dplyr::rename(datos_agrupacion, agrupacion_nombre = nombre)
names(datos_agrupacion); rm(agrupaciones)
{
print("Recategorizamos las agrupaciones en 7 coaliciones")
datos_agrupacion$agrupacion_nombre <- ifelse(datos_agrupacion$tdv=="EN BLANCO"|datos_agrupacion$tdv=="NULO"|datos_agrupacion$tdv=="IMPUGNADO"|datos_agrupacion$tdv=="RECURRIDO"|datos_agrupacion$tdv=="COMANDO",NA,ifelse(datos_agrupacion$agrupacion_nombre == "JUNTOS POR EL CAMBIO" | datos_agrupacion$agrupacion_nombre == "ALIANZA CAMBIEMOS" | datos_agrupacion$agrupacion_nombre == "CAMBIEMOS" | datos_agrupacion$agrupacion_nombre == "MOVIMIENTO DE ACCION VECINAL", "Cambiemos/Macrismo", ifelse(datos_agrupacion$agrupacion_nombre == "Alianza Frente para la Victoria" | datos_agrupacion$agrupacion_nombre == "ALIANZA FRENTE PARA LA VICTORIA" | datos_agrupacion$agrupacion_nombre == "FRENTE DE TODOS" | datos_agrupacion$agrupacion_nombre == "FRENTE PARA LA VICTORIA" | datos_agrupacion$agrupacion_nombre == "UNION POR LA PATRIA", "Kirchnerismo", ifelse(datos_agrupacion$agrupacion_nombre == "FRENTE LIBER.AR" | datos_agrupacion$agrupacion_nombre == "LA LIBERTAD AVANZA" | datos_agrupacion$agrupacion_nombre == "UNION DEL CENTRO DEMOCRATICO" | datos_agrupacion$agrupacion_nombre == "UNITE POR LA LIBERTAD Y LA DIGNIDAD", "Liberalismo",
ifelse(datos_agrupacion$agrupacion_nombre == "Alianza Compromiso Federal" | datos_agrupacion$agrupacion_nombre == "ALIANZA COMPROMISO FEDERAL" | datos_agrupacion$agrupacion_nombre == "Alianza Frente Popular" | datos_agrupacion$agrupacion_nombre == "ALIANZA FRENTE POPULAR" | datos_agrupacion$agrupacion_nombre == "ALIANZA UNIDOS POR UNA NUEVA ALTERNATIVA (UNA)" | datos_agrupacion$agrupacion_nombre == "Frente Entrerriano Federal" | datos_agrupacion$agrupacion_nombre == "HACEMOS POR NUESTRO PAIS" | datos_agrupacion$agrupacion_nombre == "PRINCIPIOS Y VALORES" | datos_agrupacion$agrupacion_nombre == "CONSENSO FEDERAL" | datos_agrupacion$agrupacion_nombre == "PARTIDO MOVIMIENTO DE ACCION  VECINAL", "Peronismo Federal/Tercera Via",
ifelse(datos_agrupacion$agrupacion_nombre == "Alianza Frente Amplio Progresista" | datos_agrupacion$agrupacion_nombre == "ALIANZA FRENTE AMPLIO PROGRESISTA" | datos_agrupacion$agrupacion_nombre == "ALIANZA PROGRESISTAS" | datos_agrupacion$agrupacion_nombre == "ALIANZA PROYECTO SUR" | datos_agrupacion$agrupacion_nombre == "Alianza Unión Para el Desarrollo Social" | datos_agrupacion$agrupacion_nombre == "ALIANZA UNION PARA EL DESARROLLO SOCIAL - UDESO" | datos_agrupacion$agrupacion_nombre == "COALICION CIVICA - AFIRMACION PARA UNA REPUBLICA IGUALITARIA (ARI)" | datos_agrupacion$agrupacion_nombre == "Coalición Cívica - Afirmación para una República Igualitaria ARI" | datos_agrupacion$agrupacion_nombre == "COALICION CIVICA - ARI" | datos_agrupacion$agrupacion_nombre == "COALICION CIVICA ARI" | datos_agrupacion$agrupacion_nombre == "Movimiento Libres del Sur" | datos_agrupacion$agrupacion_nombre == "MOVIMIENTO LIBRES DEL SUR" | datos_agrupacion$agrupacion_nombre == "PARTIDO SOCIAL DE CENTRO" | datos_agrupacion$agrupacion_nombre == "Alianza Unión para el Desarrollo Social" | datos_agrupacion$agrupacion_nombre == "COALICIÓN CÍVICA - AFIRMACIÓN PARA UNA REPÚBLICA IGUALITARIA (ARI)", "Progresismo/Socialdemocracia", ifelse(datos_agrupacion$agrupacion_nombre == "Alianza Frente de Izquierda y de los Trabajadores" | datos_agrupacion$agrupacion_nombre == "ALIANZA FRENTE DE IZQUIERDA Y DE LOS TRABAJADORES" | datos_agrupacion$agrupacion_nombre == "FRENTE DE IZQUIERDA Y DE TRABAJADORES - UNIDAD" | datos_agrupacion$agrupacion_nombre == "FRENTE DE IZQUIERDA Y DE TRABAJADORES UNIDAD" | datos_agrupacion$agrupacion_nombre == "MOVIMIENTO AL SOCIALISMO" | datos_agrupacion$agrupacion_nombre == "MST - NUEVA IZQUIERDA" | datos_agrupacion$agrupacion_nombre == "POLITICA OBRERA" | datos_agrupacion$agrupacion_nombre ==  "PROYECTO JOVEN", "Izquierda", "Conservadurismo/Nacionalismo")))))))
# In Else: "DEL CAMPO POPULAR", "FRENTE NOS", "FRENTE PATRIOTA","FRENTE PATRIOTA FEDERAL","MOVIMIENTO IZQUIERDA JUVENTUD DIGNIDAD","PARTIDO AUTONOMISTA","PARTIDO POPULAR","MOVIMIENTO IZQUIERDA JUVENTUD Y DIGNIDAD" <- "Conservadurismo/Nacionalismo"
}
table(datos_agrupacion$agrupacion_nombre)
head(datos_agrupacion)
datos_presidencial <- datos_agrupacion; rm(datos_agrupacion)
head(datos_presidencial)
table(datos_presidencial$eleccion_tipo)
table(datos_presidencial$anio)
table(datos_presidencial$agrupacion_nombre)
################ ################ ################ ################
{
print("ELECCIONES AÑO 2011")
PASO2011 <- datos_presidencial %>%
filter(eleccion_tipo == "PASO") %>%
filter(anio == "2011")
GEN2011 <- datos_presidencial %>%
filter(eleccion_tipo == "GENERALES") %>%
filter(anio == "2011")
}
rm(GEN2011, PASO2011)
################ ################ ################ ################
{
print("ELECCIONES AÑO 2019")
PASO2019 <- datos_presidencial %>%
filter(eleccion_tipo == "PASO") %>%
filter(anio == "2019")
GEN2019 <- datos_presidencial %>%
filter(eleccion_tipo == "GENERALES") %>%
filter(anio == "2019")
}
################ ################ ################ ################
{
print("ELECCIONES AÑO 2023")
PASO2023 <- datos_presidencial %>%
filter(eleccion_tipo == "PASO") %>%
filter(anio == "2023")
GEN2023 <- datos_presidencial %>%
filter(eleccion_tipo == "GENERALES") %>%
filter(anio == "2023")
BALL2023 <- datos_presidencial %>%
filter(eleccion_tipo == "BALLOTAGE") %>%
filter(anio == "2023")
}
rm(datos_presidencial)
class(GEN2023); class(PASO2023); class(BALL2023); class(GEN2011); class(PASO2011); class(GEN2015); class(PASO2015); class(BALL2015); class(GEN2019); class(PASO2019)
setDT(GEN2023); setDT(PASO2023); setDT(BALL2023); setDT(GEN2011); setDT(PASO2011); setDT(GEN2015); setDT(PASO2015); setDT(BALL2015); setDT(GEN2019); setDT(PASO2019)
class(GEN2023); class(PASO2023); class(BALL2023); class(GEN2011); class(PASO2011); class(GEN2015); class(PASO2015); class(BALL2015); class(GEN2019); class(PASO2019)
fwrite(GEN2019, "GEN2019.csv")
fwrite(PASO2019, "PASO2019.csv")
fwrite(GEN2023, "GEN2023.csv")
fwrite(PASO2023, "PASO2023.csv")
fwrite(BALL2023, "BALL2023.csv")
rm(list=ls())
## 2023 SEBA
secciones <- fread("seccion.csv",encoding="UTF-8"); head(secciones)
secciones$nombre <- toupper(secciones$nombre); head(secciones)
secciones <- dplyr::rename(secciones, seccion_nombre = nombre); names(secciones)
generales_2023 <- fread("GEN2023.csv",encoding="UTF-8"); head(generales_2023)
gc()
GEN2023 <- inner_join(generales_2023, secciones, by = c('seccion_id' = 'seccion_id', 'distrito_id' = 'distrito_id')); head(GEN2023)
gc()
votos_2023 = GEN2023 %>%
filter(tdv=="POSITIVO") %>%
group_by(distrito_id, distrito_nombre, seccion_id, seccion_nombre, agrupacion_nombre, anio) %>%
summarise(votos = sum(votos,na.rm=TRUE)) %>%
ungroup() %>%
group_by(seccion_nombre) %>%
mutate(vsh=votos/sum(votos))
votos_melt_2023  <- melt(votos_2023, id.vars = c("distrito_id", "distrito_nombre", "seccion_id", "seccion_nombre", "anio", "agrupacion_nombre"),
measure.vars = "vsh")
votos_cast_2023 <- reshape2::dcast(votos_melt_2023, distrito_id + distrito_nombre + seccion_id + seccion_nombre + anio ~ agrupacion_nombre,
value.var = "value")
fwrite(votos_cast_2023, "generales-2023.csv")
## 2019 SEBA
secciones <- fread("seccion.csv",encoding="UTF-8"); head(secciones)
secciones$nombre <- toupper(secciones$nombre); head(secciones)
secciones <- dplyr::rename(secciones, seccion_nombre = nombre); names(secciones)
generales_2019 <- fread("GEN2019.csv",encoding="UTF-8"); head(generales_2019)
gc()
GEN2019 <- inner_join(generales_2019, secciones, by = c('seccion_id' = 'seccion_id', 'distrito_id' = 'distrito_id')); head(GEN2019)
gc()
votos_2019 = GEN2019 %>%
filter(tdv=="POSITIVO") %>%
group_by(distrito_id, distrito_nombre, seccion_id, seccion_nombre, agrupacion_nombre, anio) %>%
summarise(votos = sum(votos,na.rm=TRUE)) %>%
ungroup() %>%
group_by(seccion_nombre) %>%
mutate(vsh=votos/sum(votos))
votos_melt_2019  <- melt(votos_2019, id.vars = c("distrito_id", "distrito_nombre", "seccion_id", "seccion_nombre", "anio", "agrupacion_nombre"),
measure.vars = "vsh")
votos_cast_2019 <- reshape2::dcast(votos_melt_2019, distrito_id + distrito_nombre + seccion_id + seccion_nombre + anio ~ agrupacion_nombre,
value.var = "value")
fwrite(votos_cast_2019, "generales-2019.csv")
votos_melt  <- rbind(votos_melt_2019, votos_melt_2023)
names(votos_cast_2019)
names(votos_cast_2023)
votos_final_long <- rbind(votos_cast_2019, votos_cast_2023)
names(votos_cast_2019)
names(votos_cast_2023)
names(votos_cast_2019)
votos_cast_2019 <- votos_cast_2019[, -c(7)]; names(votos_cast_2019)
names(votos_cast_2023)
votos_final_long <- rbind(votos_cast_2019, votos_cast_2023)
fwrite(votos_final_long, "generales-final-l.csv")
head(votos_final_long)
tail(votos_final_long)
rm(list=ls())
{
print("Importamos los datos")
puestos_total <- import("Desempleo/puestos_total_depto.csv", setclass =" data.table", encoding="UTF-8")
puestos_emp <- import("Desempleo/puestos_total_empresas_depto.csv", setclass =" data.table", encoding="UTF-8")
nombres <- import("Desempleo/diccionario_cod_depto.csv", setclass =" data.table", encoding="UTF-8")
}
head(puestos_total)
head(puestos_emp)
head(nombres)
gc()
empleo <- inner_join(puestos_total, nombres, by = c('codigo_departamento_indec'='codigo_departamento_indec', 'id_provincia_indec'='id_provincia_indec'))
head(empleo)
empleo$nombre_departamento_indec <- toupper(empleo$nombre_departamento_indec)
empleo$nombre_provincia_indec <- toupper(empleo$nombre_provincia_indec)
head(empleo)
table(empleo$fecha)
class(empleo$fecha)
empleo$fecha <- as.POSIXlt(empleo$fecha,
tryFormats = c("%d/%m/%Y"))
class(empleo$fecha)
empleo$anio = year(empleo$fecha); table(empleo$anio)
head(empleo)
tail(empleo)
empleo1 <- empleo[, -c(1, 5, 6)]; head(empleo1)
empleo2 <- empleo %>%
group_by(anio, codigo_departamento_indec, nombre_departamento_indec, id_provincia_indec, nombre_provincia_indec) %>%
summarise(totales_anio = sum(puestos))
empleo2
gc()
tabla_empleo <- inner_join(empleo1, empleo2, by = c('codigo_departamento_indec'='codigo_departamento_indec', 'id_provincia_indec'='id_provincia_indec', 'anio' = 'anio'))
rm(empleo, empleo1, empleo2, nombres, puestos_emp, puestos_total)
head(tabla_empleo)
tail(tabla_empleo)
fwrite(tabla_empleo, "Desempleo/puestos_merged.csv")
rm(list=ls())
# Calculo de indicadores
empleo <- fread("Desempleo/puestos_merged.csv")
summary(empleo)
table(empleo$anio)
{
print("Filtramos por año agregando media y mediana anual, para cada departamento en los 4 años bajo análisis.")
empleo2018 <- empleo %>%
group_by(codigo_departamento_indec, nombre_departamento_indec, id_provincia_indec, nombre_provincia_indec, totales_anio) %>%
filter(anio == "2018") %>%
summarise(prom_mensual = mean(puestos),
mediana_mensual = median(puestos)) %>%
summarise(prom_anual = mean(prom_mensual),
mediana_anual = median(mediana_mensual))
empleo2018$anio <- "2018"
empleo2019 <- empleo %>%
group_by(codigo_departamento_indec, nombre_departamento_indec, id_provincia_indec, nombre_provincia_indec, totales_anio) %>%
filter(anio == "2019") %>%
summarise(prom_mensual = mean(puestos),
mediana_mensual = median(puestos)) %>%
summarise(prom_anual = mean(prom_mensual),
mediana_anual = median(mediana_mensual))
empleo2019$anio <- "2019"
empleo2020 <- empleo %>%
group_by(codigo_departamento_indec, nombre_departamento_indec, id_provincia_indec, nombre_provincia_indec, totales_anio) %>%
filter(anio == "2020") %>%
summarise(prom_mensual = mean(puestos),
mediana_mensual = median(puestos)) %>%
summarise(prom_anual = mean(prom_mensual),
mediana_anual = median(mediana_mensual))
empleo2020$anio <- "2020"
empleo2021 <- empleo %>%
group_by(codigo_departamento_indec, nombre_departamento_indec, id_provincia_indec, nombre_provincia_indec, totales_anio) %>%
filter(anio == "2021") %>%
summarise(prom_mensual = mean(puestos),
mediana_mensual = median(puestos)) %>%
summarise(prom_anual = mean(prom_mensual),
mediana_anual = median(mediana_mensual))
empleo2021$anio <- "2021"
}
empleo2018
tail(empleo2018)
empleo2019
tail(empleo2019)
empleo2020
tail(empleo2020)
empleo2021
tail(empleo2021)
empleo <- rbind(empleo2018, empleo2019, empleo2020, empleo2021)
head(empleo)
tail(empleo)
table(empleo$anio)
{
print("Generamos variación interanual en %% respecto al año 2018.") # Respecto a la MEDIA (prom_anual)
empleo <- empleo %>%
group_by(nombre_departamento_indec, nombre_provincia_indec) %>%
arrange(anio) %>%
mutate(var_interanual = prom_anual - lag(prom_anual),
var_interanual_porc = (var_interanual / lag(prom_anual)) * 100)
empleo <- empleo %>% filter(!is.na(var_interanual))
empleo <- empleo %>% filter(!is.na(var_interanual_porc))
}
head(empleo)
tail(empleo)
fwrite(empleo, "Desempleo/empleo_final.csv")
rm(list=ls())
votos_final_long <- fread("generales-final-l.csv"); head(votos_final_long)
empleo <- fread("Desempleo/empleo_final.csv"); head(empleo)
E2019 <- empleo %>%
group_by(nombre_departamento_indec, id_provincia_indec, nombre_provincia_indec) %>%
filter(anio == "2019") %>%
summarise(Empleo_2019 = prom_anual)
E2019
View(E2019)
table(empleo$anio)
E2020 <- empleo %>%
group_by(nombre_departamento_indec, id_provincia_indec, nombre_provincia_indec) %>%
filter(anio == "2020") %>%
summarise(Empleo_2020 = prom_anual)
E2020
empleo_anio <- inner_join(E2019, E2020, by = c('nombre_departamento_indec'='nombre_departamento_indec', 'id_provincia_indec'='id_provincia_indec', 'nombre_provincia_indec' = 'nombre_provincia_indec'))
head(empleo_anio)
empleo_anio$Empleo_var <- empleo_anio$Empleo_2020 / empleo_anio$Empleo_2019
head(empleo_anio$Empleo_var)
empleo_anio$Empleo_var <- empleo_anio$Empleo_2019 / empleo_anio$Empleo_2020
head(empleo_anio$Empleo_var)
empleo_anio$Empleo_var <- empleo_anio$Empleo_2020 / empleo_anio$Empleo_2019
head(empleo_anio)
View(empleo_anio)
options(scipen = 999) # Remueve la notación científica
empleo_anio <- inner_join(E2019, E2020, by = c('nombre_departamento_indec'='nombre_departamento_indec', 'id_provincia_indec'='id_provincia_indec', 'nombre_provincia_indec' = 'nombre_provincia_indec'))
head(empleo_anio)
empleo_anio$Empleo_var <- empleo_anio$Empleo_2020 / empleo_anio$Empleo_2019
head(empleo_anio)
View(empleo_anio)
head(empleo)
empleo_anio <- as.data.frame(empleo_anio)
head(empleo_anio)
empleo_anio <- inner_join(E2019, E2020, by = c('nombre_departamento_indec'='nombre_departamento_indec', 'id_provincia_indec'='id_provincia_indec', 'nombre_provincia_indec' = 'nombre_provincia_indec'))
head(empleo_anio)
{
print("Generamos variación interanual en %% respecto al año 2018.") # En términos de la MEDIA (prom_anual)
empleo_anio <- empleo_anio %>%
group_by(nombre_departamento_indec, id_provincia_indec, nombre_provincia_indec) %>%
mutate(Empleo_var = Empleo_2020 - lag(Empleo_2019),
Empleo_var_porc = (Empleo_var / lag(Empleo_2020)) * 100)
}
head(empleo_anio)
rm(list=ls())
options(scipen = 999) # Remueve la notación científica
votos_final_long <- fread("generales-final-l.csv"); head(votos_final_long)
empleo <- fread("Desempleo/empleo_final.csv"); head(empleo)
table(empleo$anio)
E2019 <- empleo %>%
group_by(nombre_departamento_indec, id_provincia_indec, nombre_provincia_indec) %>%
filter(anio == "2019") %>%
summarise(Empleo_2019 = prom_anual)
E2019
E2020 <- empleo %>%
group_by(nombre_departamento_indec, id_provincia_indec, nombre_provincia_indec) %>%
filter(anio == "2020") %>%
summarise(Empleo_2020 = prom_anual)
E2020
empleo_anio <- inner_join(E2019, E2020, by = c('nombre_departamento_indec'='nombre_departamento_indec', 'id_provincia_indec'='id_provincia_indec', 'nombre_provincia_indec' = 'nombre_provincia_indec'))
head(empleo_anio)
{
empleo_anio <- empleo_anio %>%
group_by(nombre_departamento_indec, id_provincia_indec, nombre_provincia_indec) %>%
mutate(Empleo_var = Empleo_2020 - lag(Empleo_2019),
Empleo_var_porc = (Empleo_var / lag(Empleo_2020)) * 100)
}
head(empleo_anio)
head(empleo_anio)
{
empleo_anio <- empleo_anio %>%
group_by(nombre_departamento_indec, id_provincia_indec, nombre_provincia_indec) %>%
mutate(Empleo_var = Empleo_2020 - Empleo_2019,
Empleo_var_porc = (Empleo_var / Empleo_2020) * 100)
}
head(empleo_anio)
rm(list=ls())
options(scipen = 999) # Remueve la notación científica
votos_final_long <- fread("generales-final-l.csv"); head(votos_final_long)
empleo <- fread("Desempleo/empleo_final.csv"); head(empleo)
table(empleo$anio)
E2019 <- empleo %>%
group_by(nombre_departamento_indec, id_provincia_indec, nombre_provincia_indec) %>%
filter(anio == "2019") %>%
summarise(Empleo_2019 = prom_anual)
E2019
E2020 <- empleo %>%
group_by(nombre_departamento_indec, id_provincia_indec, nombre_provincia_indec) %>%
filter(anio == "2020") %>%
summarise(Empleo_2020 = prom_anual)
E2020
empleo_anio <- inner_join(E2019, E2020, by = c('nombre_departamento_indec'='nombre_departamento_indec', 'id_provincia_indec'='id_provincia_indec', 'nombre_provincia_indec' = 'nombre_provincia_indec'))
head(empleo_anio)
{
empleo_anio <- empleo_anio %>%
group_by(nombre_departamento_indec, id_provincia_indec, nombre_provincia_indec) %>%
mutate(Empleo_var = Empleo_2020 - Empleo_2019,
Empleo_var_porc = (Empleo_var / Empleo_2020) * 100)
}
head(empleo_anio)
View(empleo_anio)
rm(list=ls())
options(scipen = 999) # Remueve la notación científica
votos_final_long <- fread("generales-final-l.csv"); head(votos_final_long)
empleo <- fread("Desempleo/empleo_final.csv"); head(empleo)
table(empleo$anio)
E2019 <- empleo %>%
group_by(nombre_departamento_indec, id_provincia_indec, nombre_provincia_indec) %>%
filter(anio == "2019") %>%
summarise(Empleo_2019 = prom_anual)
E2019
E2020 <- empleo %>%
group_by(nombre_departamento_indec, id_provincia_indec, nombre_provincia_indec) %>%
filter(anio == "2020") %>%
summarise(Empleo_2020 = prom_anual)
E2020
empleo_anio <- inner_join(E2019, E2020, by = c('nombre_departamento_indec'='nombre_departamento_indec', 'id_provincia_indec'='id_provincia_indec', 'nombre_provincia_indec' = 'nombre_provincia_indec'))
head(empleo_anio)
empleo_anio <- empleo_anio %>%
arrange(nombre_departamento_indec, id_provincia_indec, nombre_provincia_indec, Empleo_2019) %>%
group_by(nombre_departamento_indec, id_provincia_indec, nombre_provincia_indec) %>%
mutate(Empleo_var = Empleo_2020 - lag(Empleo_2019),
Empleo_var_porc = (Empleo_var / lag(Empleo_2019)) * 100)
head(empleo_anio)
empleo_anio <- inner_join(E2019, E2020, by = c('nombre_departamento_indec'='nombre_departamento_indec', 'id_provincia_indec'='id_provincia_indec', 'nombre_provincia_indec' = 'nombre_provincia_indec'))
head(empleo_anio)
{
empleo_anio <- empleo_anio %>%
group_by(nombre_departamento_indec, id_provincia_indec, nombre_provincia_indec) %>%
mutate(Empleo_var = Empleo_2020 - Empleo_2019,
Empleo_var_porc = (Empleo_var / Empleo_2020) * 100)
}
head(empleo_anio)
rm(list=ls())
options(scipen = 999) # Remueve la notación científica
votos_final_long <- fread("generales-final-l.csv"); head(votos_final_long)
empleo <- fread("Desempleo/empleo_final.csv"); head(empleo)
table(empleo$anio)
E2019 <- empleo %>%
group_by(nombre_departamento_indec, id_provincia_indec, nombre_provincia_indec) %>%
filter(anio == "2019") %>%
summarise(Empleo_2019 = prom_anual)
E2019
E2020 <- empleo %>%
group_by(nombre_departamento_indec, id_provincia_indec, nombre_provincia_indec) %>%
filter(anio == "2020") %>%
summarise(Empleo_2020 = prom_anual)
E2020
empleo_anio <- inner_join(E2019, E2020, by = c('nombre_departamento_indec'='nombre_departamento_indec', 'id_provincia_indec'='id_provincia_indec', 'nombre_provincia_indec' = 'nombre_provincia_indec'))
head(empleo_anio)
{
empleo_anio <- empleo_anio %>%
group_by(nombre_departamento_indec, id_provincia_indec, nombre_provincia_indec) %>%
mutate(Empleo_var = Empleo_2019 - Empleo_2020,
Empleo_var_porc = (Empleo_var / abs(Empleo_2019)) * 100)
}
head(empleo_anio)
View(empleo_anio)
rm(list=ls())
options(scipen = 999) # Remueve la notación científica
votos_final_long <- fread("generales-final-l.csv"); head(votos_final_long)
empleo <- fread("Desempleo/empleo_final.csv"); head(empleo)
table(empleo$anio)
E2019 <- empleo %>%
group_by(nombre_departamento_indec, id_provincia_indec, nombre_provincia_indec) %>%
filter(anio == "2019") %>%
summarise(Empleo_2019 = prom_anual)
E2019
E2020 <- empleo %>%
group_by(nombre_departamento_indec, id_provincia_indec, nombre_provincia_indec) %>%
filter(anio == "2020") %>%
summarise(Empleo_2020 = prom_anual)
E2020
empleo_anio <- inner_join(E2019, E2020, by = c('nombre_departamento_indec'='nombre_departamento_indec', 'id_provincia_indec'='id_provincia_indec', 'nombre_provincia_indec' = 'nombre_provincia_indec'))
head(empleo_anio)
{
empleo_anio <- empleo_anio %>%
group_by(nombre_departamento_indec, id_provincia_indec, nombre_provincia_indec) %>%
mutate(Empleo_var = Empleo_2020 - Empleo_2019,
Empleo_var_porc = (Empleo_var / abs(Empleo_2020)) * 100)
}
head(empleo_anio)
rm(E2019, E2020, empleo)
votos_final_long <- fread("generales-final-l.csv"); head(votos_final_long)
head(empleo_anio)
head(empleo_anio)
empleo_anio <- dplyr::rename(empleo_anio, seccion_nombre = nombre_departamento_indec,
distrito_nombre = nombre_provincia_indec); names(empleo_anio)
head(empleo_anio)
votos_final_long <- fread("generales-final-l.csv"); head(votos_final_long)
votos_final_long$distrito_nombre <- toupper(votos_final_long$distrito_nombre); head(votos_final_long)
table(empleo_anio$distrito_nombre)
table(votos_final_long$distrito_nombre)
table(votos_final_long$seccion_nombre)
table(empleo_anio$seccion_nombre)
table(votos_final_long$seccion_nombre)
table(empleo_anio$seccion_nombre)
table(votos_final_long$distrito_nombre)
table(empleo_anio$distrito_nombre)
table(votos_final_long$distrito_nombre)
table(empleo_anio$distrito_nombre)
votos_final_long$distrito_nombre <- case_when(as.character(votos_final_long$distrito_nombre) == "CIUDAD AUTÓNOMA BS.AS." ~ "CABA",
as.character(votos_final_long$distrito_nombre) == "CÓRDOBA" ~ "CORDOBA",
as.character(votos_final_long$distrito_nombre) == "ENTRE RÍOS" ~ "ENTRE RIOS",
as.character(votos_final_long$distrito_nombre) == "NEUQUÉN" ~ "NEUQUEN",
as.character(votos_final_long$distrito_nombre) == "RÍO NEGRO" ~ "RIO NEGRO",
as.character(votos_final_long$distrito_nombre) == "TUCUMÁN" ~ "TUCUMAN",
TRUE ~ votos_final_long$distrito_nombre)
table(votos_final_long$distrito_nombre)
table(empleo_anio$distrito_nombre)
table(votos_final_long$distrito_nombre) == table(empleo_anio$distrito_nombre)
table(votos_final_long$distrito_nombre)
table(empleo_anio$distrito_nombre)
head(votos_final_long)
head(empleo_anio)
table(votos_final_long$seccion_nombre)
table(empleo_anio$seccion_nombre)
head(votos_final_long)
head(empleo_anio)
