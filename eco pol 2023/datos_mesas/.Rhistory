tc1$mes <-  ifelse(nchar(tc1$mes)==1, paste0("0",substr(tc1$mes,1,1)), tc1$mes)
tc1$anio <- year(dmy(tc1$Fecha))
tc2 <- tc1 %>% group_by(anio, mes) %>% summarise(tc = mean(Vendedor))
tc2<- as.data.frame(tc2)
tc2$fecha <- (paste(tc2$mes,'/',tc2$anio,sep = ''))
tc2$fecha <- as.character(tc2$fecha)
# tc2$tc30 <- tc2$tc
# tc2$tc30 <- ifelse(tc2$anio >2019, tc2$tc*1.3, tc2$tc)
tc2$tc30 <- ifelse(tc2$anio >2019, ((tc2$tc*1.3)-tc2$tc) + ((tc2$tc*1.35)-tc2$tc) + tc2$tc, tc2$tc)
tc <- tc2
today <- format(Sys.Date(), "%d-%m-%Y")
#save(tc, file= paste0('tc', today, '.Rda'))
save(tc, file= paste0(wd, '/tc.Rda'))
}
rm(list=ls())
BCRA.link <-"https://www.bcra.gob.ar/Pdfs/PublicacionesEstadisticas/debser.xls"
library(dplyr)
library(dplyr)
library(installr)
BCRA.url <-"https://www.bcra.gob.ar/Pdfs/PublicacionesEstadisticas/debser.xls"
rm(list=ls())
library(dplyr)
library(installr)
BCRA.url <-"https://www.bcra.gob.ar/Pdfs/PublicacionesEstadisticas/debser.xls"
destfile <- paste0(BCRA.url, "/BCRA.html")
download.file(BCRA.url, destfile)
BCRA <- import("BCRA.html")
url <- "http://www.bcra.gov.ar/Pdfs/PublicacionesEstadisticas/es_series.txt"
rm(list=ls())
library(dplyr)
library(installr)
library(rio)
BCRA.url <-"https://www.bcra.gob.ar/Pdfs/PublicacionesEstadisticas/debser.xls"
url <- "http://www.bcra.gov.ar/Pdfs/PublicacionesEstadisticas/es_series.txt"
destfile <- paste0(BCRA.url, "/debser.xls")
destfile2 <- paste0(url, "/es_series.txt")
download.file(BCRA.url, destfile)
download.file(url, destfile1)
rm(list=ls())
library(dplyr)
library(installr)
library(rio)
BCRA.url <-"https://www.bcra.gob.ar/Pdfs/PublicacionesEstadisticas/debser.xls"
url <- "http://www.bcra.gov.ar/Pdfs/PublicacionesEstadisticas/es_series.txt"
destfile <- paste0(BCRA.url, "/debser.xls")
destfile1 <- paste0(url, "/es_series.txt")
download.file(BCRA.url, destfile)
download.file(url, destfile1)
BCRA <- import("BCRA.html")
# Dólar paralelo
tc <- read.csv("https://api.bluelytics.com.ar/v2/evolution.csv")
tc <-subset(tc, tc$type == "Blue")
tc <- rename(tc, Fecha = day, Comprador = value_buy, Vendedor = value_sell)
tc
rm(list=ls())
library(dplyr)
library(installr)
library(rio)
# Dólar paralelo
tc <- read.csv("https://api.bluelytics.com.ar/v2/evolution.csv")
names(tc)
head(tc)
tc.b <- subset(tc, tc$type == "Blue")
tc.o <- subset(tc, tc$type == "Oficial")
tc.b <- rename(tc.b, Fecha = day, Comprador = value_buy, Vendedor = value_sell); tc.b
tc.o <- rename(tc.o, Fecha = day, Comprador = value_buy, Vendedor = value_sell); tc.o
summary(tc.b)
summary(tc.o)
rm(list=ls())
# Euro paralelo y euro oficial
tc <- read.csv("https://api.bluelytics.com.ar/v2/evolution.csv"); names(tc)
View(tc)
# Euro paralelo y euro oficial
tc <- read.csv("https://api.bluelytics.com.ar/v2/latest"); names(tc)
rm(list=ls())
# Euro paralelo y euro oficial
tc2 <- read.csv("https://api.bluelytics.com.ar/v2/latest"); names(tc)
names(tc2)
head(tc2)
# Euro paralelo y euro oficial
tc2 <- read.csv("https://api.bluelytics.com.ar/v2/evolution.json"); names(tc2)
# Euro paralelo y euro oficial
tc2 <- read.csv("https://api.bluelytics.com.ar/v2/evolution.csv"); names(tc2)
View(tc2)
# Euro paralelo y euro oficial
tc2 <- read.csv("https://api.bluelytics.com.ar/v1/evolution.csv"); names(tc2)
# Euro paralelo y euro oficial
tc2 <- read.csv("https://api.bluelytics.com.ar/v3/evolution.csv"); names(tc2)
# Euro paralelo y euro oficial
tc2 <- read.csv("https://api.bluelytics.com.ar/v2/latest"); names(tc2)
# Euro paralelo y euro oficial
tc2 <- read.csv("https://api.bluelytics.com.ar/v2/evolution.json"); names(tc2)
View(tc2)
# Euro paralelo y euro oficial
tc2 <- read.csv("https://api.bluelytics.com.ar/v2/evolution.json", get("euro")); names(tc2)
# Euro paralelo y euro oficial
tc2 <- read.csv("https://api.bluelytics.com.ar/v2/evolution.csv", get("euro")); names(tc2)
rm(list=ls())|
library(dplyr)
library(installr)
library(rio)
# Dólar blue y dólar oficial
tc <- read.csv("https://api.bluelytics.com.ar/v2/evolution.csv"); names(tc)
tc.blue <- subset(tc, tc$type == "Blue")
tc.oof <- subset(tc, tc$type == "Oficial")
tc.blue <- rename(tc.blue, Fecha = day, Comprador = value_buy, Vendedor = value_sell); tc.blue
tc.of <- rename(tc.of, Fecha = day, Comprador = value_buy, Vendedor = value_sell); tc.of
summary(tc.of)
rm(list=ls())|
library(dplyr)
library(installr)
library(rio)
# Dólar blue y dólar oficial
tc <- read.csv("https://api.bluelytics.com.ar/v2/evolution.csv"); names(tc)
tc.blue <- subset(tc, tc$type == "Blue")
tc.of <- subset(tc, tc$type == "Oficial")
tc.blue <- rename(tc.blue, Fecha = day, Comprador = value_buy, Vendedor = value_sell); tc.blue
tc.of <- rename(tc.of, Fecha = day, Comprador = value_buy, Vendedor = value_sell); tc.of
summary(tc.blue)
summary(tc.of)
rm(list=ls())
BCRA.url <-"https://www.bcra.gob.ar/Pdfs/PublicacionesEstadisticas/debser.xls"
url <- "http://www.bcra.gov.ar/Pdfs/PublicacionesEstadisticas/es_series.txt"
destfile <- paste0(BCRA.url, "/debser.xls")
destfile1 <- paste0(url, "/es_series.txt")
download.file(BCRA.url, destfile)
download.file(url, destfile1)
BCRA <- read.xlsx("https://www.bcra.gob.ar/Pdfs/PublicacionesEstadisticas/debser.xls")
library(openxlsx)
BCRA <- read.xlsx("https://www.bcra.gob.ar/Pdfs/PublicacionesEstadisticas/debser.xls")
rm(list=ls())
library(openxlsx)
BCRA <- read.xlsx("https://www.bcra.gob.ar/Pdfs/PublicacionesEstadisticas/debser.xls")
BCRA.url <-"https://www.bcra.gob.ar/PublicacionesEstadisticas/Cuadros_estandarizados_series_estadisticas.asp"
destfile <- paste0(BCRA.url, "/debser.xls")
download.file(BCRA.url, destfile)
destfile1 <- paste0(LELIQS.url, "/Historial_LELIQ.xlw")
download.file(LELIQS.url, destfile1)
BCRA.url <-"https://www.bcra.gob.ar/PublicacionesEstadisticas/Cuadros_estandarizados_series_estadisticas.asp"
LELIQS.url <-"https://www.bcra.gob.ar/PublicacionesEstadisticas/Historial-Leliq.asp"
destfile <- paste0(BCRA.url, "/debser.xls")
download.file(BCRA.url, destfile)
destfile1 <- paste0(LELIQS.url, "/Historial_LELIQ.xlw")
download.file(LELIQS.url, destfile1)
download.file(BCRA.url, destfile)
download.file(LELIQS.url, destfile1)
destfile1 <- paste0(LELIQS.url, "/Historial-Leliq-Excel.asp?dato=1")
download.file(LELIQS.url, destfile1)
destfile1 <- paste0(LELIQS.url, "/Historial-Leliq-Excel.asp")
download.file(LELIQS.url, destfile1)
rm(list=ls())
library(rvest)
bcra <- "https://www.bcra.gob.ar/PublicacionesEstadisticas/Cuadros_estandarizados_series_estadisticas.asp"
tmisc <- bcra %>%
read_html() %>%
html_nodes(xpath = '/table table-BCRA table-bordered table-hover table-responsive') %>%
html_table()
library(tidyverse)
library(rvest)
bcra <- "https://www.bcra.gob.ar/PublicacionesEstadisticas/Cuadros_estandarizados_series_estadisticas.asp"
bcra <- read_html("https://www.bcra.gob.ar/PublicacionesEstadisticas/Cuadros_estandarizados_series_estadisticas.asp")
View(bcra)
bcra_LELIQ <- read_html("https://www.bcra.gob.ar/PublicacionesEstadisticas/Historial-Leliq.asp")
rm(list=ls())
library(tidyverse)
library(rvest)
bcra_LELIQ <- read_html("https://www.bcra.gob.ar/PublicacionesEstadisticas/Historial-Leliq.asp")
LELIQ <- bcra_LELIQ %>% html_elements("table")
View(LELIQ)
tabla <- LELIQ %>%
html_element("table")
View(tabla)
tabla <- LELIQ %>%
html_element("table") %>%
html_table()
View(tabla)
rm(list=ls())
library(tidyverse)
library(rvest)
bcra_LELIQ <- read_html("https://www.bcra.gob.ar/PublicacionesEstadisticas/Historial-Leliq.asp")
LELIQ <- bcra_LELIQ %>% html_elements("table")
tabla <- LELIQ %>%
html_element("table table-BCRA table-bordered table-hover table-responsive") %>%
html_table()
tabla <- bcra_LELIQ %>% html_elements("tbody")
rm(list=ls())
library(tidyverse)
library(rvest)
bcra_LELIQ <- read_html("https://www.bcra.gob.ar/PublicacionesEstadisticas/Historial-Leliq.asp")
nodos <- bcra_LELIQ %>% html_elements("tbody"); nodos
nodos <- bcra_LELIQ %>% html_elements("thead", "tbody"); nodos
nodos <- bcra_LELIQ %>% html_elements("tbody"); nodos
tabla <- nodos %>%
html_element("tr") %>%
html_element("td") %>%
html_table()
View(tabla)
tabla
tabla <- nodos %>%
html_element("tr") %>%
html_element("td") %>%
html_text2()
tabla
tabla <- nodos %>%
html_element("tr") %>%
html_element("td") %>%
html_element("div") %>%
html_text2()
tabla
tabla <- nodos %>%
html_element("tr") %>%
html_element("td") %>%
#html_element("div") %>%
html_text2()
tabla
tabla <- nodos %>%
html_element("tr") %>%
html_element("td") %>%
html_element("td") %>%
html_text2()
tabla
tabla <- nodos %>%
html_element("tr") %>%
html_element("td") %>%
#html_element("div") %>%
html_element("/td") %>%
html_text2()
tabla
library(tidyverse)
library(rvest)
bcra_LELIQ <- read_html("https://www.bcra.gob.ar/PublicacionesEstadisticas/Historial-Leliq.asp")
nodos <- bcra_LELIQ %>% html_elements("tbody"); nodos
tabla <- nodos %>%
html_element("table") %>%
html_element("tr") %>%
html_element("td") %>%
html_text2()
tabla
library(tidyverse)
library(rvest)
bcra_LELIQ <- read_html("https://www.bcra.gob.ar/PublicacionesEstadisticas/Historial-Leliq.asp")
nodos <- bcra_LELIQ %>% html_elements("table"); nodos
tabla <- nodos %>%
html_element("table") %>%
html_element("tbody") %>%
html_element("tr") %>%
html_element("td") %>%
html_text2()
tabla
nodos <- bcra_LELIQ %>% html_elements("table"); nodos
tabla <- nodos %>%
html_element("table") %>%
html_element("tbody") %>%
#html_element("tr") %>%
#html_element("td") %>%
html_text2()
tabla
nodos <- bcra_LELIQ %>% html_elements("table"); nodos
tabla <- nodos %>%
html_element("tbody") %>%
#html_element("tr") %>%
#html_element("td") %>%
html_text2()
tabla
tabla <- nodos %>%
html_element("tbody") %>%
html_element("tr") %>%
html_element("td") %>%
html_text2()
tabla
tabla <- nodos %>%
html_element("tbody") %>%
html_text2()
tabla
bcra_LELI
bcra_LELIQ
nodos
tabla <- nodos %>%
html_element("tbody") %>%
html_element("thead") %>%
html_text2()
tabla
View(nodos)
rm(list=ls())
library(tidyverse)
library(rvest)
bcra_LELIQ <- read_html("https://www.bcra.gob.ar/PublicacionesEstadisticas/Historial-Leliq.asp")
nodos <- bcra_LELIQ %>% html_elements("table"); nodos
tbody <- nodos %>%
html_element("tbody") %>%
html_element("thead") %>%
html_text2()
tbody
tbody <- nodos %>%
html_element("tbody") %>%
html_text2()
tbody
View(nodos)
tbody <- nodos %>%
html_element("tbody") %>%
html_element("tr") %>%
html_element("td") %>%
html_text2()
tbody
tbody <- nodos %>%
html_element("tbody") %>%
html_text2()
tbody
tr <- tbody %>%
html_element("tr") %>%
html_text2()
tr
td <- tbody %>%
html_element("td") %>%
html_text2()
td
td <- tbody %>%
html_element("tr") %>%
html_element("td") %>%
html_text2()
td
tbody
td <- tbody %>%
html_element("t\r") %>%
html_element("t\d") %>%
td
rm(list=ls())
library(tidyverse)
library(rvest)
bcra_LELIQ <- read_html("https://www.bcra.gob.ar/PublicacionesEstadisticas/Historial-Leliq.asp")
nodos <- bcra_LELIQ %>% html_elements("table"); nodos
tbody <- nodos %>%
html_element("tbody") %>%
html_table()
tbody
td <- tbody %>%
html_element("t\r") %>%
html_element("t\d") %>%
td
library(tidyverse)
library(rvest)
bcra_LELIQ <- read_html("https://www.bcra.gob.ar/PublicacionesEstadisticas/Historial-Leliq.asp")
nodos <- bcra_LELIQ %>% html_elements("table"); nodos
tbody <- nodos %>%
html_element("tbody") %>%
html_table()
tbody
rm(list=ls())
library(tidyverse)
library(rvest)
bcra_LELIQ <- read_html("https://www.bcra.gob.ar/PublicacionesEstadisticas/Historial-Leliq.asp")
nodos <- bcra_LELIQ %>% html_elements("table"); nodos
table <- nodos %>%
html_element("thead") %>%
html_element("tbody") %>%
html_table()
table
table <- nodos %>%
html_element("tbody") %>%
html_table()
table
rm(list=ls())
library(tidyverse)
library(rvest)
bcra_LELIQ <- read_html("https://www.bcra.gob.ar/PublicacionesEstadisticas/Historial-Leliq.asp")
nodos <- bcra_LELIQ %>% html_elements("table"); nodos
tabla <- nodos %>%
html_element("tbody") %>%
html_table()
tabla
############################### ECO POL 2023 ##################################
rm(list=ls())
library(installr)
library(R.utils)
library(dplyr)
library(data.table)
library(tidyverse)
library(rvest)
library(janitor)
library(rio)
library(here)
library(tmap)
library(sf)
library(glue)
library(scales)
library(htmltools)
library(leaflet)
directorio <- "C:\\Users\\IDECOR\\Documents\\Code\\Political_Economy\\eco pol 2023\\datos_mesas"
setwd(directorio); getwd()
################################
{
print("ELECCIONES 2023")
PASO2023 <- datos_presidencial %>%
filter(eleccion_tipo == "PASO") %>%
filter(anio == "2023")
GEN2023 <- datos_presidencial %>%
filter(eleccion_tipo == "GENERALES") %>%
filter(anio == "2023")
BALL2023 <- datos_presidencial %>%
filter(eleccion_tipo == "BALLOTAGE") %>%
filter(anio == "2023")
}
######## Mapa por provincias
{
capa_provincial <- st_read("~/Code/Political_Economy/eco pol 2023/datos_mesas/provincias.gpkg")
GEN2023 <- import("GEN2023.csv", setclass =" data.table", encoding="UTF-8")
PASO2023 <- import("PASO2023.csv", setclass =" data.table", encoding="UTF-8")
#BALL2023 <- import("BALL2023.csv", setclass =" data.table", encoding="UTF-8")
}
rm(list=ls()) ######## ######## ######## ######## ######## ######## ########
library(doParallel)
cl <- makeCluster(2)
registerDoParallel(cl)
library(doParallel)
registerDoParallel(cores=6)
############################### ECO POL 2023 ##################################
rm(list=ls())
library(doParallel)
cl <- makeCluster(6)
registerDoParallel(cl)
directorio <- "C:\\Users\\IDECOR\\Documents\\Code\\Political_Economy\\eco pol 2023\\datos_mesas"
setwd(directorio); getwd()
library(installr)
library(R.utils)
library(dplyr)
library(data.table)
library(tidyverse)
library(rvest)
library(janitor)
library(rio)
library(here)
library(tmap)
library(sf)
library(glue)
library(scales)
library(htmltools)
library(leaflet)
library(doParallel)
cl <- makeCluster(6)
registerDoParallel(cl)
gc()
library(doParallel)
cl <- makeCluster(6)
registerDoParallel(cl)
gc()
gc()
library(doParallel)
cl <- makeCluster(6)
registerDoParallel(cl)
gc()
gc()
library(doParallel)
cl <- makeCluster(6)
registerDoParallel(cl)
######## Mapa por provincias
{
capa_provincial <- st_read("~/Code/Political_Economy/eco pol 2023/datos_mesas/provincias.gpkg")
GEN2023 <- import("GEN2023.csv", setclass =" data.table", encoding="UTF-8")
PASO2023 <- import("PASO2023.csv", setclass =" data.table", encoding="UTF-8")
#BALL2023 <- import("BALL2023.csv", setclass =" data.table", encoding="UTF-8")
}
View(GEN2023)
View(capa_provincial)
votos = GEN2023 %>%
group_by(distrito_nombre, agrupacion_nombre) %>%
summarise(votos = sum(votos))
votos
totales = GEN2023 %>%
group_by(distrito_nombre) %>%
summarise(totales = sum(votos))
totales
votos = left_join(votos, totales)
votos; rm(totales)
votos$prop = votos$votos / votos$totales
votos
votos$prop <- (votos$prop)*100
votos
class(votos$prop)
mapa_votos = left_join(votos, capa_provincial, by = "distrito_nombre")
mapa_votos
class(mapa_votos)
mapa_votos = st_as_sf(mapa_votos, sf_column_name = "geom")
mapa_votos$agrupacion_nombre = gsub("/", " ", mapa_votos$agrupacion_nombre)
mapview_facet <- function(x,f, z) {
criteria=split(x,x[[f]])
nms = paste(deparse(substitute(x)), names(criteria), sep = "-")
for (i in 1:length(criteria)) {
map=mapview::mapview(criteria[[i]], layer.name = nms[i], z = z)
assign(paste0("map_",i), map)
}
set=list(map_1)
for (i in 2:length(criteria)) {set=append(set, get(paste0("map_",i)))}
leafsync::latticeView(set)
}
mapview_facet(x = mapa_votos, f = "agrupacion_nombre", z = "prop")
library(tmap)
library(tmaptools)
#tmap_mode("view")
tmap_mode("plot")
tmap_options(check.and.fix = TRUE)
mapa_votos = st_transform(mapa_votos, 22174)
ver <-   tm_shape(mapa_votos) +
tm_scale_bar(position = c("left", "bottom")) + tm_compass(position = c("right", "top"), size = 1) +
tm_polygons(size = 0.12, style = "jenks", n = 8, col = "prop", alpha = 0.7, border.lwd = 0.3,
title = "Porcentaje de Votos") +
tm_layout(legend.position = c("right", "center"),
legend.outside = TRUE,
title = 'Elecciones Generales 2023',
title.position = c('center', 'top')) +
tm_facets(by = "agrupacion_nombre", ncol = 3, nrow = 2)
ver
rm(list=ls())
