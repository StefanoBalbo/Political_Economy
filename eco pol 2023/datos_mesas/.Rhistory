library(rvest)
bcra_LELIQ <- read_html("https://www.bcra.gob.ar/PublicacionesEstadisticas/Historial-Leliq.asp")
nodos <- bcra_LELIQ %>% html_elements("table"); nodos
tabla <- nodos %>%
html_element("tbody") %>%
html_table()
tabla
rm(list=ls())
library(installr)
library(R.utils)
library(dplyr)
library(data.table)
library(tidyverse)
library(rvest)
library(janitor)
library(rio)
library(here)
library(tmap)
library(sf)
library(glue)
library(scales)
library(htmltools)
library(leaflet)
library(stringr)
library(reshape)
library(lubridate)
library(rvest)
gc()
directorio <- "C:\\Users\\IDECOR\\Documents\\Code\\Political_Economy\\eco pol 2023\\datos_mesas"
#directorio <- "C:\\Users\\stefa\\Documents\\Code\\Political_Economy\\eco pol 2023\\datos_mesas"
setwd(directorio); getwd()
# # # Geometrías provinciales # # #
provs <- st_read("~/Code/Political_Economy/eco pol 2023/datos_mesas/IGN/provincia.shp"); names(provs)
provincias <- rio::import("distrito.csv", setclass = "data.table", encoding = "UTF-8"); names(provs)
table(provs$nam)
table(provincias$nombre)
class(provs$nam)
class(provincias$nombre)
provs$nam <- case_when(as.character(provs$nam)== "Tierra del Fuego, Antártida e Islas del Atlántico Sur" ~ "Tierra del Fuego",
as.character(provs$nam) == "Ciudad Autónoma de Buenos Aires" ~ "Ciudad Autónoma Bs.As.",
TRUE ~ provs$nam)
provs <- rename(provs, nombre = nam); names(provs)
names(provincias)
gc() # Not to overload
capa_provincial <- left_join(provs, provincias, by = "nombre")
names(provs)
provs <- dplyr::rename(provs, nombre = nam); names(provs)
names(provincias)
gc() # Not to overload
capa_provincial <- left_join(provs, provincias, by = "nombre")
names(capa_provincial); rm(provincias, provs)
head(capa_provincial)
table(capa_provincial$nombre)
capa_provincial <- dplyr::rename(capa_provincial, distrito_nombre = nombre); names(capa_provincial)
capa_provincial <- capa_provincial[, -c(1, 2, 3, 4, 6, 7 ,8 , 9, 10, 11)]; head(capa_provincial)
class(capa_provincial)
# Guardamos geometrías provinciales
st_write(capa_provincial, "provincias.gpkg")
rm(list=ls()) ######## ######## ######## ######## ######## ######## ########
# Mapeamos
{
capa_provincial <- st_read("~/Code/Political_Economy/eco pol 2023/datos_mesas/provincias.gpkg")
GEN2023 <- import("GEN2023.csv", setclass =" data.table", encoding="UTF-8")
PASO2023 <- import("PASO2023.csv", setclass =" data.table", encoding="UTF-8")
#BALL2023 <- import("BALL2023.csv", setclass =" data.table", encoding="UTF-8")
}
class(GEN2023)
GEN2023 = data.frame(GEN2023)
PASO2023 = data.frame(PASO2023)
votos = GEN2023 %>%
group_by(distrito_nombre, agrupacion_nombre) %>%
summarise(votos = sum(votos))
votos
totales = GEN2023 %>%
group_by(distrito_nombre) %>%
summarise(totales = sum(votos))
totales
votos = left_join(votos, totales)
votos; rm(totales)
votos$prop = votos$votos / votos$totales
votos
votos$prop <- (votos$prop)*100
votos
class(votos$prop)
gc() # Not to overload
mapa_votos = left_join(votos, capa_provincial, by = "distrito_nombre")
mapa_votos
class(mapa_votos)
mapa_votos = st_as_sf(mapa_votos, sf_column_name = "geom")
mapa_votos$agrupacion_nombre = gsub("/", " ", mapa_votos$agrupacion_nombre)
mapview_facet <- function(x,f, z) {
criteria=split(x,x[[f]])
nms = paste(deparse(substitute(x)), names(criteria), sep = "-")
for (i in 1:length(criteria)) {
map=mapview::mapview(criteria[[i]], layer.name = nms[i], z = z)
assign(paste0("map_",i), map)
}
set=list(map_1)
for (i in 2:length(criteria)) {set=append(set, get(paste0("map_",i)))}
leafsync::latticeView(set)
}
mapview_facet(x = mapa_votos, f = "agrupacion_nombre", z = "prop")
library(tmap)
library(tmaptools)
#tmap_mode("view")
tmap_mode("plot")
#tmap_mode(mode = c("plot", "view"))
tmap_options(check.and.fix = TRUE)
mapa_votos = st_transform(mapa_votos, 22174)
gc() # Not to overload
ver <-   tm_shape(mapa_votos) +
tm_scale_bar(position = c("left", "bottom")) + tm_compass(position = c("right", "top"), size = 1) +
tm_polygons(size = 0.12, style = "jenks", n = 8, col = "prop", alpha = 0.7, border.lwd = 0.3,
title = "Porcentaje de Votos") +
tm_layout(legend.position = c("right", "center"),
legend.outside = TRUE,
title = 'Elecciones Generales 2023',
title.position = c('center', 'top')) +
tm_facets(by = "agrupacion_nombre", ncol = 3, nrow = 2)
ver
tmap_save(ver, "mapa_generales_2023_provs.png")
rm(list=ls())
library(installr)
library(R.utils)
library(dplyr)
library(data.table)
library(tidyverse)
library(rvest)
library(janitor)
library(rio)
library(here)
library(tmap)
library(sf)
library(glue)
library(scales)
library(htmltools)
library(leaflet)
library(stringr)
library(reshape)
library(lubridate)
library(rvest)
gc()
directorio <- "C:\\Users\\IDECOR\\Documents\\Code\\Political_Economy\\eco pol 2023\\datos_mesas"
#directorio <- "C:\\Users\\stefa\\Documents\\Code\\Political_Economy\\eco pol 2023\\datos_mesas"
setwd(directorio); getwd()
url <- "https://socialstats.la/archivos/argentina/elecciones/elecciones.csv.7z"
rm(list=ls())
# 2023
secciones <- fread("seccion.csv"); head(secciones)
secciones$nombre <- toupper(secciones$nombre); head(secciones)
secciones <- dplyr::rename(secciones, seccion_nombre = nombre); names(secciones)
generales <- fread("GEN2023.csv"); head(generales)
gc()
GEN2023 <- inner_join(generales, secciones, by = c('seccion_id' = 'seccion_id', 'distrito_id' = 'distrito_id')); head(GEN2023)
total_votos <- as.numeric(sum(GEN2023$votos))
gc()
votos = GEN2023 %>%
group_by(distrito_id, distrito_nombre, seccion_id, seccion_nombre, circuito_id, agrupacion_nombre, anio) %>%
summarise(votos = sum(votos))
votos
#votos = left_join(votos, totales)
#votos
#votos$prop = (votos$votos / votos$totales) * 100
votos$prop = votos$votos / total_votos
votos
votos <- as.data.frame(votos); class(votos)
votos$agrupacion_nombre = gsub("/", "_", votos$agrupacion_nombre)
votos$agrupacion_nombre = gsub(" ", "_", votos$agrupacion_nombre)
head(votos)
tail(votos)
votos_melt <- melt(votos, id.vars = c("distrito_id", "distrito_nombre", "seccion_id", "seccion_nombre", "circuito_id", "anio", "agrupacion_nombre"),
measure.vars = "prop")
votos_melt[is.na(votos_melt)] <- 0
votos_cast <- reshape2::dcast(votos_melt, distrito_id + distrito_nombre + seccion_id + seccion_nombre + circuito_id + anio ~ agrupacion_nombre,
value.var = "value")
head(votos_cast)
tail(votos_cast)
class(votos_cast$Cambiemos_Macrismo)
sum(votos_cast$Cambiemos_Macrismo)
sum(votos_cast$Kirchnerismo)
sum(votos_cast$Liberalismo)
sum(votos_cast$Peronismo_Federal_Tercera_Via)
sum(votos_cast$Izquierda)
sum(votos_cast$Conservadurismo_Nacionalismo)
sum(votos_cast$Cambiemos_Macrismo) +
sum(votos_cast$Kirchnerismo) +
sum(votos_cast$Liberalismo) +
sum(votos_cast$Peronismo_Federal_Tercera_Via) +
sum(votos_cast$Izquierda) +
sum(votos_cast$Conservadurismo_Nacionalismo)
fwrite(votos_cast, "Generales2023.csv")
rm(list=ls())
# 2019
secciones <- fread("seccion.csv"); head(secciones)
secciones$nombre <- toupper(secciones$nombre); head(secciones)
secciones <- dplyr::rename(secciones, seccion_nombre = nombre); names(secciones)
generales <- fread("GEN2019.csv"); head(generales)
gc()
GEN2019 <- inner_join(generales, secciones, by = c('seccion_id' = 'seccion_id', 'distrito_id' = 'distrito_id')); head(GEN2019)
total_votos <- as.numeric(sum(GEN2019$votos))
gc()
votos = GEN2019 %>%
group_by(distrito_id, distrito_nombre, seccion_id, seccion_nombre, circuito_id, agrupacion_nombre, anio) %>%
summarise(votos = sum(votos))
votos
#votos = left_join(votos, totales)
#votos
#votos$prop = (votos$votos / votos$totales) * 100
votos$prop = votos$votos / total_votos
votos
votos <- as.data.frame(votos); class(votos)
votos$agrupacion_nombre = gsub("/", "_", votos$agrupacion_nombre)
votos$agrupacion_nombre = gsub(" ", "_", votos$agrupacion_nombre)
head(votos)
tail(votos)
votos_melt <- melt(votos, id.vars = c("distrito_id", "distrito_nombre", "seccion_id", "seccion_nombre", "circuito_id", "anio", "agrupacion_nombre"),
measure.vars = "prop")
votos_melt[is.na(votos_melt)] <- 0
votos_cast <- reshape2::dcast(votos_melt, distrito_id + distrito_nombre + seccion_id + seccion_nombre + circuito_id + anio ~ agrupacion_nombre,
value.var = "value")
head(votos_cast)
tail(votos_cast)
class(votos_cast$Cambiemos_Macrismo)
sum(votos_cast$Cambiemos_Macrismo)
sum(votos_cast$Kirchnerismo)
sum(votos_cast$Liberalismo)
sum(votos_cast$Peronismo_Federal_Tercera_Via)
sum(votos_cast$Izquierda)
sum(votos_cast$Conservadurismo_Nacionalismo)
sum(votos_cast$Cambiemos_Macrismo) +
sum(votos_cast$Kirchnerismo) +
sum(votos_cast$Liberalismo) +
sum(votos_cast$Peronismo_Federal_Tercera_Via) +
sum(votos_cast$Izquierda) +
sum(votos_cast$Conservadurismo_Nacionalismo)
fwrite(votos_cast, "Generales2019.csv")
rm(list=ls())
##################### DATOS DESEMPLEO #####################
{
print("Importamos los datos")
puestos_total <- import("Desempleo/puestos_total_depto.csv", setclass =" data.table", encoding="UTF-8")
puestos_emp <- import("Desempleo/puestos_total_empresas_depto.csv", setclass =" data.table", encoding="UTF-8")
nombres <- import("Desempleo/diccionario_cod_depto.csv", setclass =" data.table", encoding="UTF-8")
}
head(puestos_total)
head(puestos_emp)
head(nombres)
gc()
empleo <- inner_join(puestos_total, nombres, by = c('codigo_departamento_indec'='codigo_departamento_indec', 'id_provincia_indec'='id_provincia_indec'))
head(empleo)
empleo$nombre_departamento_indec <- toupper(empleo$nombre_departamento_indec)
empleo$nombre_provincia_indec <- toupper(empleo$nombre_provincia_indec)
head(empleo)
table(empleo$fecha)
class(empleo$fecha)
empleo$fecha <- as.POSIXlt(empleo$fecha,
tryFormats = c("%d/%m/%Y"))
class(empleo$fecha)
empleo$anio = year(empleo$fecha); table(empleo$anio)
head(empleo)
tail(empleo)
empleo1 <- empleo[, -c(1, 5, 6)]; head(empleo1)
empleo2 <- empleo %>%
group_by(anio, codigo_departamento_indec, nombre_departamento_indec, id_provincia_indec, nombre_provincia_indec) %>%
summarise(totales_anio = sum(puestos))
empleo2
gc()
tabla_empleo <- inner_join(empleo1, empleo2, by = c('codigo_departamento_indec'='codigo_departamento_indec', 'id_provincia_indec'='id_provincia_indec', 'anio' = 'anio'))
rm(empleo, empleo1, empleo2, nombres, puestos_emp, puestos_total)
head(tabla_empleo)
tail(tabla_empleo)
fwrite(tabla_empleo, "Desempleo/puestos_merged.csv")
rm(list=ls())
# Calculo de indicadores
empleo <- fread("Desempleo/puestos_merged.csv")
summary(empleo)
table(empleo$anio)
{
print("Filtramos por año agregando media y mediana anual, para cada departamento en los 4 años bajo análisis.")
empleo2018 <- empleo %>%
group_by(codigo_departamento_indec, nombre_departamento_indec, id_provincia_indec, nombre_provincia_indec, totales_anio) %>%
filter(anio == "2018") %>%
summarise(prom_mensual = mean(puestos),
mediana_mensual = median(puestos)) %>%
summarise(prom_anual = mean(prom_mensual),
mediana_anual = median(mediana_mensual))
empleo2018$anio <- "2018"
empleo2019 <- empleo %>%
group_by(codigo_departamento_indec, nombre_departamento_indec, id_provincia_indec, nombre_provincia_indec, totales_anio) %>%
filter(anio == "2019") %>%
summarise(prom_mensual = mean(puestos),
mediana_mensual = median(puestos)) %>%
summarise(prom_anual = mean(prom_mensual),
mediana_anual = median(mediana_mensual))
empleo2019$anio <- "2019"
empleo2020 <- empleo %>%
group_by(codigo_departamento_indec, nombre_departamento_indec, id_provincia_indec, nombre_provincia_indec, totales_anio) %>%
filter(anio == "2020") %>%
summarise(prom_mensual = mean(puestos),
mediana_mensual = median(puestos)) %>%
summarise(prom_anual = mean(prom_mensual),
mediana_anual = median(mediana_mensual))
empleo2020$anio <- "2020"
empleo2021 <- empleo %>%
group_by(codigo_departamento_indec, nombre_departamento_indec, id_provincia_indec, nombre_provincia_indec, totales_anio) %>%
filter(anio == "2021") %>%
summarise(prom_mensual = mean(puestos),
mediana_mensual = median(puestos)) %>%
summarise(prom_anual = mean(prom_mensual),
mediana_anual = median(mediana_mensual))
empleo2021$anio <- "2021"
}
empleo2018
tail(empleo2018)
empleo2019
tail(empleo2019)
empleo2020
tail(empleo2020)
empleo2021
tail(empleo2021)
empleo <- rbind(empleo2018, empleo2019, empleo2020, empleo2021)
head(empleo)
tail(empleo)
table(empleo$anio)
{
print("Generamos variación interanual en %% respecto al año 2018.") # Respecto a la MEDIA (prom_anual)
empleo <- empleo %>%
group_by(nombre_departamento_indec, nombre_provincia_indec) %>%
arrange(anio) %>%
mutate(var_interanual = prom_anual - lag(prom_anual),
var_interanual_porc = (var_interanual / lag(prom_anual)) * 100)
empleo <- empleo %>% filter(!is.na(var_interanual))
empleo <- empleo %>% filter(!is.na(var_interanual_porc))
}
head(empleo)
tail(empleo)
fwrite(empleo, "Desempleo/empleo_final.csv")
rm(list=ls())
web <- read_html("https://es.wikipedia.org/wiki/Anexo:Departamentos_y_partidos_de_Argentina_por_superficie_y_poblaci%C3%B3n_(2010)")
node <- html_nodes(web, "table"); node
tabla_poblacion <- html_table(node)[[1]]
head(tabla_poblacion)
names(tabla_poblacion) <- c('area_nac','rank_nac','area_prov','rank_prov','nombre_departamento', 'nombre_provincia', 'Cabecera', 'Municipios', 'anio_fundacion', 'area', 'poblacion_2010')
head(tabla_poblacion)
tabla_poblacion <- tabla_poblacion[-c(1, 2), ]; head(tabla_poblacion)
tabla_poblacion <- as.data.frame(tabla_poblacion); class(tabla_poblacion)
tabla_poblacion$poblacion_2010 = gsub("\\[\\d+\\]", "", tabla_poblacion$poblacion_2010); head(tabla_poblacion)
tabla_poblacion$poblacion_2010 = gsub("[^0-9\\s]", "", tabla_poblacion$poblacion_2010); head(tabla_poblacion)
tabla_poblacion$poblacion_2010 = gsub("\\s", ".", tabla_poblacion$poblacion_2010); head(tabla_poblacion)
summary(tabla_poblacion)
tabla_poblacion$poblacion_2010 <- as.numeric(tabla_poblacion$poblacion_2010); class(tabla_poblacion$poblacion_2010)
head(tabla_poblacion)
tabla_poblacion <- tabla_poblacion[,-c(1, 2, 3, 4, 9, 10)]; head(tabla_poblacion)
na <- is.na(tabla_poblacion)
sum(na) #????????????? pendiente buscarlo
fwrite(tabla_poblacion, "poblaciondptos.csv")
rm(list=ls())
# 2023
secciones <- fread("seccion.csv"); head(secciones)
secciones$nombre <- toupper(secciones$nombre); head(secciones)
secciones <- dplyr::rename(secciones, seccion_nombre = nombre); names(secciones)
generales <- fread("GEN2023.csv"); head(generales)
gc()
GEN2023 <- inner_join(generales, secciones, by = c('seccion_id' = 'seccion_id', 'distrito_id' = 'distrito_id')); head(GEN2023)
total_votos <- as.numeric(sum(GEN2023$votos))
gc()
votos = GEN2023 %>%
group_by(distrito_id, distrito_nombre, seccion_id, seccion_nombre, circuito_id, agrupacion_nombre, anio) %>%
summarise(votos = sum(votos))
votos
#votos = left_join(votos, totales)
#votos
#votos$prop = (votos$votos / votos$totales) * 100
votos$prop = votos$votos / total_votos
votos
totales = GEN2023 %>%
group_by(seccion_id, circuito_id) %>%
summarise(totales = sum(votos))
totales
votos = left_join(votos, totales)
votos
votos$prop = (votos$votos / votos$totales) * 100
votos <- as.data.frame(votos); class(votos)
#votos$prop = votos$votos / total_votos
votos
View(votos)
totales = GEN2023 %>%
group_by(seccion_id, seccion_nombre) %>%
summarise(totales = sum(votos))
totales
votos = left_join(votos, totales)
votos
votos$prop = (votos$votos / votos$totales) * 100
#votos$prop = votos$votos / total_votos
votos
votos <- as.data.frame(votos); class(votos)
votos$agrupacion_nombre = gsub("/", "_", votos$agrupacion_nombre)
votos$agrupacion_nombre = gsub(" ", "_", votos$agrupacion_nombre)
head(votos)
tail(votos)
votos_melt <- melt(votos, id.vars = c("distrito_id", "distrito_nombre", "seccion_id", "seccion_nombre", "circuito_id", "anio", "agrupacion_nombre"),
measure.vars = "prop")
votos_melt[is.na(votos_melt)] <- 0
votos_cast <- reshape2::dcast(votos_melt, distrito_id + distrito_nombre + seccion_id + seccion_nombre + circuito_id + anio ~ agrupacion_nombre,
value.var = "value")
head(votos_cast)
tail(votos_cast)
class(votos_cast$Cambiemos_Macrismo)
sum(votos_cast$Cambiemos_Macrismo)
sum(votos_cast$Kirchnerismo)
sum(votos_cast$Liberalismo)
sum(votos_cast$Peronismo_Federal_Tercera_Via)
sum(votos_cast$Izquierda)
sum(votos_cast$Conservadurismo_Nacionalismo)
sum(votos_cast$Cambiemos_Macrismo) +
sum(votos_cast$Kirchnerismo) +
sum(votos_cast$Liberalismo) +
sum(votos_cast$Peronismo_Federal_Tercera_Via) +
sum(votos_cast$Izquierda) +
sum(votos_cast$Conservadurismo_Nacionalismo)
votos = left_join(votos, totales)
votos
votos$prop = votos$votos / votos$totales
#votos$prop = votos$votos / total_votos
votos
rm(list=ls())
# 2023
secciones <- fread("seccion.csv"); head(secciones)
secciones$nombre <- toupper(secciones$nombre); head(secciones)
secciones <- dplyr::rename(secciones, seccion_nombre = nombre); names(secciones)
generales <- fread("GEN2023.csv"); head(generales)
gc()
GEN2023 <- inner_join(generales, secciones, by = c('seccion_id' = 'seccion_id', 'distrito_id' = 'distrito_id')); head(GEN2023)
total_votos <- as.numeric(sum(GEN2023$votos))
gc()
votos = GEN2023 %>%
group_by(distrito_id, distrito_nombre, seccion_id, seccion_nombre, circuito_id, agrupacion_nombre, anio) %>%
summarise(votos = sum(votos))
votos
totales = GEN2023 %>%
group_by(seccion_id, seccion_nombre) %>%
summarise(totales = sum(votos))
totales
votos = left_join(votos, totales)
votos
votos$prop = votos$votos / votos$totales
#votos$prop = votos$votos / total_votos
votos
votos <- as.data.frame(votos); class(votos)
votos$agrupacion_nombre = gsub("/", "_", votos$agrupacion_nombre)
votos$agrupacion_nombre = gsub(" ", "_", votos$agrupacion_nombre)
head(votos)
tail(votos)
votos_melt <- melt(votos, id.vars = c("distrito_id", "distrito_nombre", "seccion_id", "seccion_nombre", "circuito_id", "anio", "agrupacion_nombre"),
measure.vars = "prop")
votos_melt[is.na(votos_melt)] <- 0
votos_cast <- reshape2::dcast(votos_melt, distrito_id + distrito_nombre + seccion_id + seccion_nombre + circuito_id + anio ~ agrupacion_nombre,
value.var = "value")
head(votos_cast)
tail(votos_cast)
class(votos_cast$Cambiemos_Macrismo)
sum(votos_cast$Cambiemos_Macrismo)
sum(votos_cast$Kirchnerismo)
sum(votos_cast$Liberalismo)
sum(votos_cast$Peronismo_Federal_Tercera_Via)
sum(votos_cast$Izquierda)
sum(votos_cast$Conservadurismo_Nacionalismo)
sum(votos_cast$Cambiemos_Macrismo) +
sum(votos_cast$Kirchnerismo) +
sum(votos_cast$Liberalismo) +
sum(votos_cast$Peronismo_Federal_Tercera_Via) +
sum(votos_cast$Izquierda) +
sum(votos_cast$Conservadurismo_Nacionalismo)
head(votos_cast)
0.019010309+0.0017484536+0.0028206186+0.024230928+0.010408247+0.0015505155
rm(list=ls())
# 2023
secciones <- fread("seccion.csv"); head(secciones)
secciones$nombre <- toupper(secciones$nombre); head(secciones)
secciones <- dplyr::rename(secciones, seccion_nombre = nombre); names(secciones)
generales <- fread("GEN2023.csv"); head(generales)
gc()
GEN2023 <- inner_join(generales, secciones, by = c('seccion_id' = 'seccion_id', 'distrito_id' = 'distrito_id')); head(GEN2023)
total_votos <- as.numeric(sum(GEN2023$votos))
gc()
votos = GEN2023 %>%
group_by(distrito_id, distrito_nombre, seccion_id, seccion_nombre, circuito_id, agrupacion_nombre, anio) %>%
summarise(votos = sum(votos))
votos
totales = GEN2023 %>%
group_by(seccion_id, seccion_nombre) %>%
summarise(totales = sum(votos))
totales
votos = left_join(votos, totales)
votos
votos$prop = (votos$votos / votos$totales)*100
#votos$prop = votos$votos / total_votos
votos
votos <- as.data.frame(votos); class(votos)
votos$agrupacion_nombre = gsub("/", "_", votos$agrupacion_nombre)
votos$agrupacion_nombre = gsub(" ", "_", votos$agrupacion_nombre)
head(votos)
tail(votos)
votos_melt <- melt(votos, id.vars = c("distrito_id", "distrito_nombre", "seccion_id", "seccion_nombre", "circuito_id", "anio", "agrupacion_nombre"),
measure.vars = "prop")
votos_melt[is.na(votos_melt)] <- 0
votos_cast <- reshape2::dcast(votos_melt, distrito_id + distrito_nombre + seccion_id + seccion_nombre + circuito_id + anio ~ agrupacion_nombre,
value.var = "value")
head(votos_cast)
tail(votos_cast)
0.19746414+0.107392780+0.08141066+1.32855262+1.14321347+0.240767685
rm(list=ls())
