nrow(deptnames); nrow(deptGEO)
# Quitamos ruido en nombres
Encoding(deptnames$NOMBRE) <- "UTF-8"
Encoding(deptGEO$NOMBRE) <- "UTF-8"
head(deptGEO)
head(deptnames)
deptnames$NOMBRE <- iconv(deptnames$NOMBRE, "latin1", "UTF-8")
deptGEO$NOMBRE <- iconv(deptGEO$NOMBRE, "latin1", "UTF-8")
head(deptGEO)
head(deptnames)
deptnames$NOMBRE <- gsub("¾", "Ñ", deptnames$NOMBRE)
deptGEO$NOMBRE <- gsub("¾", "Ñ", deptGEO$NOMBRE)
head(deptGEO)
head(deptnames)
deptnames$NOMBRE <- str_replace(deptnames$NOMBRE, "^[0-9]+\\s", "")
deptGEO$NOMBRE <- str_replace(deptGEO$NOMBRE, "^[0-9]+\\s", "")
head(deptGEO)
head(deptnames)
deptGEO$NOMBRE <- str_replace_all(deptGEO$NOMBRE, '"', '')
deptnames$NOMBRE <- str_replace_all(deptnames$NOMBRE, '"', '')
head(deptGEO)
head(deptnames)
deptnames$NOMBRE <- toupper(deptnames$NOMBRE)
deptGEO$NOMBRE <- toupper(deptGEO$NOMBRE)
deptnames$NOMBRE <- trimws(deptnames$NOMBRE)
deptGEO$NOMBRE <- trimws(deptGEO$NOMBRE)
head(deptGEO)
head(deptnames)
deptnames$NOMBRE <- gsub("[^[:print:]]", "", deptnames$NOMBRE)
deptGEO$NOMBRE <- gsub("[^[:print:]]", "", deptGEO$NOMBRE)
head(deptGEO)
head(deptnames)
class(deptnames); class(deptGEO)
class(deptnames$NOMBRE); class(deptGEO$NOMBRE)
fwrite(deptGEO, "deptnames2.csv")
fwrite(deptnames, "deptGEO2.csv")
fwrite(deptGEO, "Departamentos/deptnames2.csv")
fwrite(deptnames, "Departamentos/deptGEO2.csv")
View(deptGEO)
View(deptnames)
# check missing #
na <- is.na(dept); sum(na)
rm(na)
library(fuzzyjoin)
library(stringdist)
fuzzy_result <- stringdist_left_join(deptnames, deptGEO, by = c("NOMBRE" = "NOMBRE"), method = "jw", max_dist = 0.1)
head(fuzzy_result)
na <- is.na(fuzzy_result$index); sum(na)
na <- is.na(fuzzy_result$NOMBRE.y); sum(na)
rm(na, fuzzy_result)
head(dptos)
head(seccionxdistrito)
# # # Geometrías departamentales # # #
dptos <- st_read("~/Code/Political_Economy/eco pol 2023/datos_mesas/Departamentos/departamentos.shp"); names(dptos)
dptos <- dptos[dptos$OBJECTID!="488"&dptos$OBJECTID!="489",] # Elimina Islas Malvinas y Antartida
gc() # Not to overload
head(dptos)
head(deptGEO)
head(deptnames)
head(seccionxdistrito)
View(seccionxdistrito)
rm(list=ls())
################ ################ MAPA DEPARTAMENTAL 2023 ################ ################
{
# Base mesas
distrito <- import("distrito.csv", setclass = "data.table", encoding = "UTF-8")
seccion <- import("seccion.csv", setclass = "data.table", encoding = "UTF-8")
# Seba
deptnames <- import("Departamentos/deptnames.csv", setclass = "data.table", encoding = "UTF-8")
deptGEO <- import("Departamentos/deptnamesGEO.csv", setclass = "data.table", encoding = "UTF-8")
}
seccion$nombre <- toupper(seccion$nombre)
seccion <- rename(seccion, DEPARTA = nombre); head(seccion)
distrito$nombre <- toupper(distrito$nombre)
distrito <- rename(distrito, PROVINCIA = nombre); head(distrito)
seccionxdistrito <- merge(seccion, distrito, by = "distrito_id")
seccionxdistrito <- seccionxdistrito[, -c(3)]; head(seccionxdistrito); rm(seccion, distrito)
colnames(deptnames) <- c("DEPARTAMENTO", "NOMBRE"); head(deptnames)
colnames(deptGEO) <- c("index", "NOMBRE"); head(deptGEO)
nrow(deptnames); nrow(deptGEO)
# Quitamos ruido en nombres
Encoding(deptnames$NOMBRE) <- "UTF-8"
Encoding(deptGEO$NOMBRE) <- "UTF-8"
head(deptGEO)
head(deptnames)
deptnames$NOMBRE <- iconv(deptnames$NOMBRE, "latin1", "UTF-8")
deptGEO$NOMBRE <- iconv(deptGEO$NOMBRE, "latin1", "UTF-8")
head(deptGEO)
head(deptnames)
deptnames$NOMBRE <- gsub("¾", "Ñ", deptnames$NOMBRE)
deptGEO$NOMBRE <- gsub("¾", "Ñ", deptGEO$NOMBRE)
head(deptGEO)
head(deptnames)
deptnames$NOMBRE <- str_replace(deptnames$NOMBRE, "^[0-9]+\\s", "")
deptGEO$NOMBRE <- str_replace(deptGEO$NOMBRE, "^[0-9]+\\s", "")
head(deptGEO)
head(deptnames)
deptGEO$NOMBRE <- str_replace_all(deptGEO$NOMBRE, '"', '')
deptnames$NOMBRE <- str_replace_all(deptnames$NOMBRE, '"', '')
head(deptGEO)
head(deptnames)
deptnames$NOMBRE <- toupper(deptnames$NOMBRE)
deptGEO$NOMBRE <- toupper(deptGEO$NOMBRE)
deptnames$NOMBRE <- trimws(deptnames$NOMBRE)
deptGEO$NOMBRE <- trimws(deptGEO$NOMBRE)
head(deptGEO)
head(deptnames)
deptnames$NOMBRE <- gsub("[^[:print:]]", "", deptnames$NOMBRE)
deptGEO$NOMBRE <- gsub("[^[:print:]]", "", deptGEO$NOMBRE)
head(deptGEO)
head(deptnames)
class(deptnames); class(deptGEO)
class(deptnames$NOMBRE); class(deptGEO$NOMBRE)
identical(deptnames$NOMBRE, deptGEO$NOMBRE)
deptnames$index <- as.integer(str_extract(deptnames$DEPARTAMENTO, "\\d+"))
head(deptnames)
head(deptGEO)
identical(deptnames$index, deptGEO$index)
class(deptnames$index); class(deptGEO$index)
dept <- left_join(deptnames, deptGEO, by = "index"); head(dept)
head(deptGEO)
head(deptnames)
rm(list=ls())
################ ################ MAPA DEPARTAMENTAL 2023 ################ ################
{
# Base mesas
distrito <- import("distrito.csv", setclass = "data.table", encoding = "UTF-8")
seccion <- import("seccion.csv", setclass = "data.table", encoding = "UTF-8")
# Seba
deptnames <- import("Departamentos/deptnames.csv", setclass = "data.table", encoding = "UTF-8")
deptGEO <- import("Departamentos/deptnamesGEO.csv", setclass = "data.table", encoding = "UTF-8")
}
seccion$nombre <- toupper(seccion$nombre)
seccion <- rename(seccion, DEPARTA = nombre); head(seccion)
distrito$nombre <- toupper(distrito$nombre)
distrito <- rename(distrito, PROVINCIA = nombre); head(distrito)
seccionxdistrito <- merge(seccion, distrito, by = "distrito_id")
seccionxdistrito <- seccionxdistrito[, -c(3)]; head(seccionxdistrito); rm(seccion, distrito)
colnames(deptnames) <- c("DEPARTAMENTO", "NOMBRE"); head(deptnames)
colnames(deptGEO) <- c("index", "NOMBRE"); head(deptGEO)
nrow(deptnames); nrow(deptGEO)
# Quitamos ruido en nombres
Encoding(deptnames$NOMBRE) <- "UTF-8"
Encoding(deptGEO$NOMBRE) <- "UTF-8"
head(deptGEO)
head(deptnames)
deptnames$NOMBRE <- iconv(deptnames$NOMBRE, "latin1", "UTF-8")
deptGEO$NOMBRE <- iconv(deptGEO$NOMBRE, "latin1", "UTF-8")
head(deptGEO)
head(deptnames)
deptnames$NOMBRE <- gsub("¾", "Ñ", deptnames$NOMBRE)
deptGEO$NOMBRE <- gsub("¾", "Ñ", deptGEO$NOMBRE)
head(deptGEO)
head(deptnames)
deptnames$NOMBRE <- str_replace(deptnames$NOMBRE, "^[0-9]+\\s", "")
deptGEO$NOMBRE <- str_replace(deptGEO$NOMBRE, "^[0-9]+\\s", "")
head(deptGEO)
head(deptnames)
rm(list=ls())
################ ################ MAPA DEPARTAMENTAL 2023 ################ ################
{
# Base mesas
distrito <- import("distrito.csv", setclass = "data.table", encoding = "UTF-8")
seccion <- import("seccion.csv", setclass = "data.table", encoding = "UTF-8")
# Seba
deptnames <- import("Departamentos/deptnames.csv", setclass = "data.table", encoding = "UTF-8")
deptGEO <- import("Departamentos/deptnamesGEO.csv", setclass = "data.table", encoding = "UTF-8")
}
seccion$nombre <- toupper(seccion$nombre)
seccion <- rename(seccion, DEPARTA = nombre); head(seccion)
distrito$nombre <- toupper(distrito$nombre)
distrito <- rename(distrito, PROVINCIA = nombre); head(distrito)
seccionxdistrito <- merge(seccion, distrito, by = "distrito_id")
seccionxdistrito <- seccionxdistrito[, -c(3)]; head(seccionxdistrito); rm(seccion, distrito)
colnames(deptnames) <- c("DEPARTAMENTO", "NOMBRE"); head(deptnames)
colnames(deptGEO) <- c("index", "NOMBRE"); head(deptGEO)
nrow(deptnames); nrow(deptGEO)
# Quitamos ruido en nombres
Encoding(deptnames$NOMBRE) <- "UTF-8"
Encoding(deptGEO$NOMBRE) <- "UTF-8"
head(deptGEO)
head(deptnames)
deptnames$NOMBRE <- iconv(deptnames$NOMBRE, "latin1", "UTF-8")
deptGEO$NOMBRE <- iconv(deptGEO$NOMBRE, "latin1", "UTF-8")
head(deptGEO)
head(deptnames)
deptnames$NOMBRE <- gsub("¾", "Ñ", deptnames$NOMBRE)
deptGEO$NOMBRE <- gsub("¾", "Ñ", deptGEO$NOMBRE)
head(deptGEO)
head(deptnames)
deptnames$NOMBRE <- str_replace(deptnames$NOMBRE, "^[0-9]+\\s", "")
deptGEO$NOMBRE <- str_replace_all(deptGEO$NOMBRE, '"', '')
deptnames$NOMBRE <- str_replace_all(deptnames$NOMBRE, '"', '')
head(deptGEO)
head(deptnames)
deptnames$NOMBRE <- toupper(deptnames$NOMBRE)
deptGEO$NOMBRE <- toupper(deptGEO$NOMBRE)
deptnames$NOMBRE <- trimws(deptnames$NOMBRE)
deptGEO$NOMBRE <- trimws(deptGEO$NOMBRE)
head(deptGEO)
head(deptnames)
deptnames$NOMBRE <- gsub("[^[:print:]]", "", deptnames$NOMBRE)
deptGEO$NOMBRE <- gsub("[^[:print:]]", "", deptGEO$NOMBRE)
head(deptGEO)
head(deptnames)
class(deptnames); class(deptGEO)
class(deptnames$NOMBRE); class(deptGEO$NOMBRE)
deptnames$index <- as.integer(str_extract(deptnames$DEPARTAMENTO, "\\d+"))
head(deptnames)
head(deptGEO)
identical(deptnames$NOMBRE, deptGEO$NOMBRE)
identical(deptnames$index, deptGEO$index)
class(deptnames$index); class(deptGEO$index)
dept <- left_join(deptnames, deptGEO, by = "NOMBRE"); head(dept)
fwrite(dept, "Departamentos/namesdept.csv")
rm(deptGEO); rm(deptnames)
head(dept)
head(seccionxdistrito)
identical(dept$NOMBRE, seccionxdistrito$DEPARTA)
# # # Geometrías departamentales # # #
dptos <- st_read("~/Code/Political_Economy/eco pol 2023/datos_mesas/Departamentos/departamentos.shp"); names(dptos)
dptos <- dptos[dptos$OBJECTID!="488"&dptos$OBJECTID!="489",] # Elimina Islas Malvinas y Antartida
gc() # Not to overload
head(dptos)
head(dept)
head(seccionxdistrito)
identical(dept$NOMBRE, seccionxdistrito$DEPARTA)
identical(dept$NOMBRE, dptos$DEPARTA)
identical(dptos$DEPARTA, seccionxdistrito$DEPARTA)
# Mapeamos
{
capa_departamental <- st_read("~/Code/Political_Economy/eco pol 2023/datos_mesas/departamentos.gpkg")
GEN2023 <- import("GEN2023.csv", setclass =" data.table", encoding="UTF-8")
PASO2023 <- import("PASO2023.csv", setclass =" data.table", encoding="UTF-8")
#BALL2023 <- import("BALL2023.csv", setclass =" data.table", encoding="UTF-8")
}
GEN2023 <- import("GEN2023.csv", setclass =" data.table", encoding="UTF-8")
library(installr)
library(R.utils)
library(dplyr)
library(data.table)
library(tidyverse)
library(rvest)
library(janitor)
library(rio)
library(here)
library(tmap)
library(sf)
library(glue)
library(scales)
library(htmltools)
library(leaflet)
library(stringr)
gc()
GEN2023 <- import("GEN2023.csv", setclass =" data.table", encoding="UTF-8")
rm(list=ls()) ######## ######## ######## ######## ######## ######## ########
################ ################ MAPA DEPARTAMENTAL 2023 ################ ################
{
# Base mesas
distrito <- import("distrito.csv", setclass = "data.table", encoding = "UTF-8")
seccion <- import("seccion.csv", setclass = "data.table", encoding = "UTF-8")
# Seba
deptnames <- import("Departamentos/deptnames.csv", setclass = "data.table", encoding = "UTF-8")
deptGEO <- import("Departamentos/deptnamesGEO.csv", setclass = "data.table", encoding = "UTF-8")
}
rm(list=ls())
library(installr)
library(R.utils)
library(dplyr)
library(data.table)
library(tidyverse)
library(rvest)
library(janitor)
library(rio)
library(here)
library(tmap)
library(sf)
library(glue)
library(scales)
library(htmltools)
library(leaflet)
library(stringr)
gc()
directorio <- "C:\\Users\\IDECOR\\Documents\\Code\\Political_Economy\\eco pol 2023\\datos_mesas"
#directorio <- "C:\\Users\\stefa\\Documents\\Code\\Political_Economy\\eco pol 2023\\datos_mesas"
setwd(directorio); getwd()
################ ################ MAPA DEPARTAMENTAL 2023 ################ ################
{
# Base mesas
distrito <- import("distrito.csv", setclass = "data.table", encoding = "UTF-8")
seccion <- import("seccion.csv", setclass = "data.table", encoding = "UTF-8")
# Seba
deptnames <- import("Departamentos/deptnames.csv", setclass = "data.table", encoding = "UTF-8")
deptGEO <- import("Departamentos/deptnamesGEO.csv", setclass = "data.table", encoding = "UTF-8")
}
seccion$nombre <- toupper(seccion$nombre)
seccion <- rename(seccion, DEPARTA = nombre); head(seccion)
distrito$nombre <- toupper(distrito$nombre)
distrito <- rename(distrito, PROVINCIA = nombre); head(distrito)
seccionxdistrito <- merge(seccion, distrito, by = "distrito_id")
seccionxdistrito <- seccionxdistrito[, -c(3)]; head(seccionxdistrito); rm(seccion, distrito)
colnames(deptnames) <- c("DEPARTAMENTO", "NOMBRE"); head(deptnames)
colnames(deptGEO) <- c("index", "NOMBRE"); head(deptGEO)
nrow(deptnames); nrow(deptGEO)
# Quitamos ruido en nombres
Encoding(deptnames$NOMBRE) <- "UTF-8"
Encoding(deptGEO$NOMBRE) <- "UTF-8"
head(deptGEO)
head(deptnames)
deptnames$NOMBRE <- iconv(deptnames$NOMBRE, "latin1", "UTF-8")
deptGEO$NOMBRE <- iconv(deptGEO$NOMBRE, "latin1", "UTF-8")
head(deptGEO)
head(deptnames)
deptnames$NOMBRE <- gsub("¾", "Ñ", deptnames$NOMBRE)
deptGEO$NOMBRE <- gsub("¾", "Ñ", deptGEO$NOMBRE)
head(deptGEO)
head(deptnames)
deptnames$NOMBRE <- str_replace(deptnames$NOMBRE, "^[0-9]+\\s", "")
deptGEO$NOMBRE <- str_replace_all(deptGEO$NOMBRE, '"', '')
deptnames$NOMBRE <- str_replace_all(deptnames$NOMBRE, '"', '')
head(deptGEO)
head(deptnames)
deptnames$NOMBRE <- toupper(deptnames$NOMBRE)
deptGEO$NOMBRE <- toupper(deptGEO$NOMBRE)
deptnames$NOMBRE <- trimws(deptnames$NOMBRE)
deptGEO$NOMBRE <- trimws(deptGEO$NOMBRE)
head(deptGEO)
head(deptnames)
deptnames$NOMBRE <- gsub("[^[:print:]]", "", deptnames$NOMBRE)
deptGEO$NOMBRE <- gsub("[^[:print:]]", "", deptGEO$NOMBRE)
head(deptGEO)
head(deptnames)
class(deptnames); class(deptGEO)
class(deptnames$NOMBRE); class(deptGEO$NOMBRE)
deptnames$index <- as.integer(str_extract(deptnames$DEPARTAMENTO, "\\d+"))
head(deptnames)
head(deptGEO)
identical(deptnames$NOMBRE, deptGEO$NOMBRE)
identical(deptnames$index, deptGEO$index)
class(deptnames$index); class(deptGEO$index)
gc() # Not to overload
dept <- left_join(deptnames, deptGEO, by = "NOMBRE"); head(dept)
fwrite(dept, "Departamentos/namesdept.csv")
rm(deptGEO); rm(deptnames)
# # # Geometrías departamentales # # #
dptos <- st_read("~/Code/Political_Economy/eco pol 2023/datos_mesas/Departamentos/departamentos.shp"); names(dptos)
dptos <- dptos[dptos$OBJECTID!="488"&dptos$OBJECTID!="489",] # Elimina Islas Malvinas y Antartida
gc() # Not to overload
plot(dptos)
head(dptos)
head(dept)
head(seccionxdistrito)
identical(dept$NOMBRE, seccionxdistrito$DEPARTA)
identical(dept$NOMBRE, dptos$DEPARTA)
identical(dptos$DEPARTA, seccionxdistrito$DEPARTA)
seccionxdistrito <- rename(seccionxdistrito, seccion_nombre = DEPARTA)
dept <- rename(dept, seccion_nombre = NOMBRE)
dptos <- rename(dptos, seccion_nombre = DEPARTA)
head(dptos)
head(dept)
head(seccionxdistrito)
gc() # Not to overload
merge <- left_join(seccionxdistrito, dept, by = "seccion_nombre")
departamentos <- left_join(dptos, merge, by = "seccion_nombre")
head(departamentos)
departamentos <- departamentos[, -c(1, 5, 6, 7, 9, 10, 11, 12)]; head(departamentos)
departamentos <- rename(departamentos, distrito_nombre = PROVINCIA.x)
head(departamentos)
# Guardamos geometrías departamentales
st_write(departamentos, "departamentos.gpkg")
# Guardamos geometrías departamentales
st_write(departamentos, "departamentos.gpkg", append = FALSE)
rm(list=ls()) ######## ######## ######## ######## ######## ######## ########
# Mapeamos
{
capa_departamental <- st_read("~/Code/Political_Economy/eco pol 2023/datos_mesas/departamentos.gpkg")
GEN2023 <- import("GEN2023.csv", setclass =" data.table", encoding="UTF-8")
PASO2023 <- import("PASO2023.csv", setclass =" data.table", encoding="UTF-8")
#BALL2023 <- import("BALL2023.csv", setclass =" data.table", encoding="UTF-8")
}
class(GEN2023)
GEN2023 = data.frame(GEN2023)
PASO2023 = data.frame(PASO2023)
votos = GEN2023 %>%
group_by(distrito_nombre, agrupacion_nombre) %>%
summarise(votos = sum(votos))
votos
totales = GEN2023 %>%
group_by(distrito_nombre) %>%
summarise(totales = sum(votos))
totales
votos = left_join(votos, totales)
votos; rm(totales)
votos$prop = votos$votos / votos$totales
votos
votos$prop <- (votos$prop)*100
votos
class(votos$prop)
mapa_votos = left_join(votos, capa_departamental, by = "distrito_nombre")
mapa_votos
gc() # Not to overload
mapa_votos = left_join(votos, capa_departamental, by = "distrito_nombre")
mapa_votos
class(GEN2023)
GEN2023 = data.frame(GEN2023)
PASO2023 = data.frame(PASO2023)
votos = GEN2023 %>%
group_by(distrito_nombre, agrupacion_nombre) %>%
summarise(votos = sum(votos))
votos
head(GEN2023)
votos = GEN2023 %>%
group_by(distrito_nombre, agrupacion_nombre) %>%
summarise(votos = sum(votos))
votos
head(capa_departamental)
dptos = capa_departamental %>%
group_by(seccion_nombre, agrupacion_nombre) %>%
summarise(votos = sum(votos),
distrito = distrito_nombre)
dptos = capa_departamental %>%
group_by(seccion_nombre, geom) %>%
summarise(votos = sum(votos),
distrito = distrito_nombre)
dptos
dptos = capa_departamental %>%
group_by(seccion_nombre, geom) %>%
summarise(distrito = distrito_nombre)
dptos
votos = GEN2023 %>%
group_by(distrito_nombre, agrupacion_nombre) %>%
summarise(votos = sum(votos))
votos
totales = GEN2023 %>%
group_by(distrito_nombre) %>%
summarise(totales = sum(votos))
totales
votos = left_join(votos, totales)
votos; rm(totales)
votos$prop = votos$votos / votos$totales
votos
dptos = capa_departamental %>%
group_by(seccion_nombre, geom) %>%
summarise(distrito = distrito_nombre)
dptos
head(capa_departamental)
dptos = capa_departamental %>%
group_by(seccion_nombre, geom) %>%
summarise(distrito = distrito_nombre,
distrito_id = distrito_id,
seccion_id = seccion_id)
dptos
dptos; rm(capa_departamental)
head(GEN2023)
votos = GEN2023 %>%
group_by(seccion_id, agrupacion_nombre) %>%
summarise(votos = sum(votos))
votos
totales = GEN2023 %>%
group_by(seccion_id) %>%
summarise(totales = sum(votos))
totales
votos = left_join(votos, totales)
votos; rm(totales)
votos$prop = votos$votos / votos$totales
votos
votos$prop <- (votos$prop)*100
votos
class(votos$prop)
head(dptos)
head(votos)
mapa_votos = left_join(votos, dptos, by = "seccion_id")
gc() # Not to overload
mapa_votos = left_join(votos, dptos, by = "seccion_id")
head(dptos)
gc() # Not to overload
mapa_votos = left_join(votos, dptos, by = "seccion_id")
mapa_votos = left_join(votos, dptos, by = "seccion_id", multiple = "all")
mapa_votos
class(mapa_votos)
library(tmap)
library(tmaptools)
#tmap_mode("view")
tmap_mode("plot")
#tmap_mode(mode = c("plot", "view"))
tmap_options(check.and.fix = TRUE)
mapa_votos = st_transform(mapa_votos, 22174)
ver <-   tm_shape(mapa_votos) +
tm_scale_bar(position = c("left", "bottom")) + tm_compass(position = c("right", "top"), size = 1) +
tm_polygons(size = 0.12, style = "jenks", n = 8, col = "prop", alpha = 0.7, border.lwd = 0.3,
title = "Porcentaje de Votos") +
tm_layout(legend.position = c("right", "center"),
legend.outside = TRUE,
title = 'Elecciones Generales 2023',
title.position = c('center', 'top')) +
tm_facets(by = "agrupacion_nombre", ncol = 3, nrow = 2)
ver
tmap_save(ver, "mapa_generales_2023_dptos.png")
mapa_votos = st_as_sf(mapa_votos)
mapa_votos = st_transform(mapa_votos, 22174)
ver <-   tm_shape(mapa_votos) +
tm_scale_bar(position = c("left", "bottom")) + tm_compass(position = c("right", "top"), size = 1) +
tm_polygons(size = 0.12, style = "jenks", n = 8, col = "prop", alpha = 0.7, border.lwd = 0.3,
title = "Porcentaje de Votos") +
tm_layout(legend.position = c("right", "center"),
legend.outside = TRUE,
title = 'Elecciones Generales 2023',
title.position = c('center', 'top')) +
tm_facets(by = "agrupacion_nombre", ncol = 3, nrow = 2)
ver
rm(list=ls())
rm(list=ls())
